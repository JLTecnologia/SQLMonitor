{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Data of sys.dm_os_wait_stats",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 20,
  "iteration": 1668433181474,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 12,
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "File IO Stats - Since Startup__till____${collection_time_utc:date:YYYY-MM-DD HH.mm}_____ - \"__${sql_schedulers} CPUs__\"  - [$fqdn] - [$ip]",
      "type": "row"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${datasource}"
      },
      "description": "exec sp_BlitzFirst @seconds = 60, @ExpertMode = 1",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "sample_ms"
            },
            "properties": [
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "displayName",
                "value": "Sample Time"
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "custom.minWidth",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "file_name_DISPLAY"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "File Name"
              },
              {
                "id": "custom.minWidth",
                "value": 200
              },
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "running_query"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "collection_time_utc"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "file_logical_name"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": false
              },
              {
                "id": "displayName",
                "value": "File Name"
              },
              {
                "id": "custom.minWidth",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "file_location"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "database_name"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Database"
              },
              {
                "id": "custom.minWidth",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "disk_volume"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Drive"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "size_on_disk_bytes"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decbytes"
              },
              {
                "id": "displayName",
                "value": "File Size"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "file_type"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": false
              },
              {
                "id": "displayName",
                "value": "File Type"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total_reads_writes"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "# Reads/Writes"
              },
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "num_of_bytes_read"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "num_of_bytes_written"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total_reads_writes_bytes"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Read/Written"
              },
              {
                "id": "unit",
                "value": "decbytes"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reads_pcnt"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "writes_pcnt"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "pcnt_reads_writes"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "% Read/Writes"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "read_latency_ms"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": false
              },
              {
                "id": "displayName",
                "value": "Avg Read Stall"
              },
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "write_latency_ms"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": false
              },
              {
                "id": "displayName",
                "value": "Avg Write Stall"
              },
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "latency_ms"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Avg Stall"
              },
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_bytes_per_read"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_bytes_per_write"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_bytes_per_transfer"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 22,
      "options": {
        "footer": {
          "enablePagination": true,
          "fields": [
            "sample_ms"
          ],
          "reducer": [
            "first"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "num_of_bytes_read"
          }
        ]
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${datasource}"
          },
          "format": "table",
          "hide": false,
          "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n--declare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"/* SQLMonitor - File IO Stats Since Startup */\nset nocount on;\ndeclare @start_time datetime;\ndeclare @schedulers smallint;\ndeclare @cpu_time_min decimal(18,1);\ndeclare @IOStatsTop tinyint = 10;\ndeclare @IOPercentTop int = 99;\n\nselect @start_time = sqlserver_start_time from sys.dm_os_sys_info;\nselect @schedulers = count(*) from sys.dm_os_schedulers where status = 'VISIBLE ONLINE' and is_online = 1;\n-- @cpu_time_min = sum(total_cpu_usage_ms/1000.0)/60.0\n\n;WITH [t_DiskDrives] AS (\n\tselect ds.disk_volume\n\tfrom dbo.disk_space ds\n\twhere ds.collection_time_utc = (select max(i.collection_time_utc) from dbo.disk_space i)\n)\n,[t_FileIO] AS\n\t(\tSELECT\n\t    [running_query] = 'File IO Stats', [collection_time_utc], [sample_ms], [database_name], \n\t    [file_name_DISPLAY] = [file_logical_name]+' '+QUOTENAME(case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end),\n\t    [file_logical_name], [file_location], dv.disk_volume, [size_on_disk_bytes],\n\t\t\t[file_type] = case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end,\n\n\t\t\t[total_reads_writes] = [num_of_reads] + [num_of_writes], \n\t\t\t[num_of_bytes_read], [num_of_bytes_written], \n\t\t\t[total_reads_writes_bytes] = [num_of_bytes_read]+[num_of_bytes_written],\n\t\t\t\n\t\t\t[reads_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[writes_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[pcnt_reads_writes] = convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)) + ' / ' + convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)),\n\n\t\t\t--[num_of_reads], [io_stall_read_ms], [num_of_writes],  [io_stall_write_ms],\n\t\t\t--[io_stall], [io_pending_ms_ticks_total],\n\t\t\t\n\t\t\t[read_latency_ms] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else (([io_stall_read_ms] * 1.0)/[num_of_reads]) end),\n\t\t\t[write_latency_ms] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else (([io_stall_write_ms] * 1.0)/[num_of_writes]) end),\n\t\t\t[latency_ms] = convert(numeric(20,2), case when [num_of_reads] + [num_of_writes] = 0 then 0 else (([io_stall] * 1.0) / ([num_of_reads] + [num_of_writes])) end),\n\n\t\t\t[avg_bytes_per_read] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else ( ([num_of_bytes_read] * 1.0) / [num_of_reads] ) end),\n\t\t\t[avg_bytes_per_write] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else ( ([num_of_bytes_written] * 1.0) / [num_of_writes] ) end),\n\t\t\t[avg_bytes_per_transfer] = convert(numeric(20,2), case when [num_of_reads] = 0 and [num_of_writes] = 0 then 0 else ( (([num_of_bytes_read]+[num_of_bytes_written]) * 1.0) / ([num_of_reads]+[num_of_writes]) ) end)\n\t\t\t\n\t\t\t/*\n\t\t\t[wait_time_ms] / 1000.0 AS [WaitS],\n\t\t\t\t[wait_time_ms],\n\t\t\t([wait_time_ms] - [signal_wait_time_ms]) / 1000.0 AS [ResourceS],\n\t\t\t[signal_wait_time_ms] / 1000.0 AS [SignalS],\n\t\t\t[waiting_tasks_count] AS [WaitCount],\n\t\t\t*/\n\n\t\t\t--100.0 * [wait_time_ms] / SUM ([wait_time_ms]) OVER() AS [Percentage],\n\t\t\t--ROW_NUMBER() OVER(ORDER BY [wait_time_ms] DESC) AS [RowNum]\n\t\tFROM dbo.file_io_stats fis\n\t\tOUTER APPLY (\n\t\t\t\tselect top 1 dd.disk_volume\n\t\t\t\tfrom [t_DiskDrives] dd\n\t\t\t\twhere fis.file_location like (dd.disk_volume+'%')\n\t\t\t\torder by len(dd.disk_volume) desc\n\t\t\t) dv\n\t\tWHERE fis.collection_time_utc = (SELECT MAX(i.collection_time_utc) FROM dbo.file_io_stats i)\n    )\nselect *\nfrom [t_FileIO] fio\norder by ([num_of_bytes_read]+[num_of_bytes_written]) desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
          "refId": "Query-Db-File-Stats-Since-Startup"
        }
      ],
      "title": "Db Files IO Stats - Since Startup  __ till ___${collection_time_utc:date:YYYY-MM-DD HH.mm}___",
      "transformations": [],
      "type": "table"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "id": 16,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${datasource}"
          },
          "description": "exec sp_BlitzFirst @seconds = 60, @ExpertMode = 1",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sample_ms"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "displayName",
                    "value": "Sample Time"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 150
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "file_name_DISPLAY"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "File Name"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 200
                  },
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "running_query"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "collection_time_utc"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "file_logical_name"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": false
                  },
                  {
                    "id": "displayName",
                    "value": "File Name"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 150
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "file_location"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "database_name"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Database"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 150
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "disk_volume"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Drive"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "size_on_disk_bytes"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "decbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "File Size"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "file_type"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": false
                  },
                  {
                    "id": "displayName",
                    "value": "File Type"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "total_reads_writes"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "# Reads/Writes"
                  },
                  {
                    "id": "unit",
                    "value": "short"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "num_of_bytes_read"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "num_of_bytes_written"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "total_reads_writes_bytes"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Read/Written"
                  },
                  {
                    "id": "unit",
                    "value": "decbytes"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_pcnt"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes_pcnt"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "pcnt_reads_writes"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "% Read/Writes"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "read_latency_ms"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": false
                  },
                  {
                    "id": "displayName",
                    "value": "Avg Read Stall"
                  },
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "write_latency_ms"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": false
                  },
                  {
                    "id": "displayName",
                    "value": "Avg Write Stall"
                  },
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "latency_ms"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Avg Stall"
                  },
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "avg_bytes_per_read"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "avg_bytes_per_write"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "avg_bytes_per_transfer"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 3
          },
          "id": 17,
          "options": {
            "footer": {
              "enablePagination": true,
              "fields": [
                "sample_ms"
              ],
              "reducer": [
                "first"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "num_of_bytes_read"
              }
            ]
          },
          "pluginVersion": "9.0.2",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${datasource}"
              },
              "format": "table",
              "hide": false,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\n--set @start_time_utc = $__timeFrom();\nset @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\n--set @end_time_utc = $__timeTo();\nset @end_time_utc = $__timeFrom();\n--select @start_time_utc as start_time, @end_time_utc as end_time;\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\ndeclare @schedulers smallint;\ndeclare @StatstatsTop tinyint = 10;\ndeclare @StatsPercentTop int = 99;\ndeclare @collect_time_utc_snap1 datetime2;\ndeclare @collect_time_utc_snap2 datetime2;\n\n--select @start_time_utc = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), sqlserver_start_time) from sys.dm_os_sys_info;\nselect @schedulers = count(*) from sys.dm_os_schedulers where status = 'VISIBLE ONLINE' and is_online = 1;\n\nselect top 1 @collect_time_utc_snap2 = collection_time_utc\nfrom dbo.file_io_stats s2\nwhere s2.collection_time_utc <= @end_time_utc\norder by collection_time_utc desc;\n\nselect top 1 @collect_time_utc_snap1 = collection_time_utc\nfrom dbo.file_io_stats s1\nwhere collection_time_utc >= @start_time_utc\norder by collection_time_utc asc;\n\n--select @collect_time_utc_snap1, @collect_time_utc_snap2;\n\n;WITH [DiffStats] AS\n(\tSELECT\t-- Stats that weren't in the first snapshot\n\t\t\t--[ts2].[collection_time_utc],\n\t\t\t[ts2].[database_name],\n\t\t\t[ts2].[database_id],\n\t\t\t[ts2].[file_logical_name],\n\t\t\t[ts2].[file_id],\n\t\t\t[ts2].[file_location],\n\t\t\t[ts2].[sample_ms],\n\t\t\t[ts2].[num_of_reads],\n\t\t\t[ts2].[num_of_bytes_read],\n\t\t\t[ts2].[io_stall_read_ms],\n\t\t\t[ts2].[io_stall_queued_read_ms],\n\t\t\t[ts2].[num_of_writes],\n\t\t\t[ts2].[num_of_bytes_written],\n\t\t\t[ts2].[io_stall_write_ms],\n\t\t\t[ts2].[io_stall_queued_write_ms],\n\t\t\t[ts2].[io_stall],\n\t\t\t[ts2].[size_on_disk_bytes],\n\t\t\t[ts2].[io_pending_count]\n\tFROM dbo.file_io_stats AS [ts2]\n\tLEFT OUTER JOIN dbo.file_io_stats AS [ts1]\n\t\tON [ts2].[database_name] = [ts1].[database_name]\n\t\tAND [ts2].[file_logical_name] = [ts1].[file_logical_name]\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\tWHERE [ts1].[file_logical_name] IS NULL\n\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t--\n\tUNION\n\t--\n\tSELECT\t-- Diff of Stats in both snapshots\n\t\t\t--[collection_time_utc] = [ts2].[collection_time_utc] - [ts1].[collection_time_utc],\n\t\t\t[database_name] = [ts2].[database_name],\n\t\t\t[database_id] = [ts2].[database_id],\n\t\t\t[file_logical_name] = [ts2].[file_logical_name],\n\t\t\t[file_id] = [ts2].[file_id],\n\t\t\t[file_location] = [ts2].[file_location],\n\t\t\t[sample_ms] = [ts2].[sample_ms] - [ts1].[sample_ms],\n\t\t\t[num_of_reads] = [ts2].[num_of_reads] - [ts1].[num_of_reads],\n\t\t\t[num_of_bytes_read] = [ts2].[num_of_bytes_read] - [ts1].[num_of_bytes_read],\n\t\t\t[io_stall_read_ms] = [ts2].[io_stall_read_ms] - [ts1].[io_stall_read_ms],\n\t\t\t[io_stall_queued_read_ms] = [ts2].[io_stall_queued_read_ms] - [ts1].[io_stall_queued_read_ms],\n\t\t\t[num_of_writes] = [ts2].[num_of_writes] - [ts1].[num_of_writes],\n\t\t\t[num_of_bytes_written] = [ts2].[num_of_bytes_written] - [ts1].[num_of_bytes_written],\n\t\t\t[io_stall_write_ms] = [ts2].[io_stall_write_ms] - [ts1].[io_stall_write_ms],\n\t\t\t[io_stall_queued_write_ms] = [ts2].[io_stall_queued_write_ms] - [ts1].[io_stall_queued_write_ms],\n\t\t\t[io_stall] = [ts2].[io_stall] - [ts1].[io_stall],\n\t\t\t[size_on_disk_bytes] = [ts2].[size_on_disk_bytes],\n\t\t\t[io_pending_count] = [ts2].[io_pending_count] - [ts1].[io_pending_count]\n\tFROM dbo.file_io_stats AS [ts2]\n\tLEFT OUTER JOIN dbo.file_io_stats AS [ts1]\n\t\tON [ts2].[database_name] = [ts1].[database_name]\n\t\tAND [ts2].[file_logical_name] = [ts1].[file_logical_name]\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\tWHERE [ts1].[file_logical_name] IS NOT NULL\n\tAND ( ([ts2].[num_of_reads]+[ts2].[num_of_writes]) - ([ts1].[num_of_reads]+[ts1].[num_of_writes]) ) > 0\n\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n)\n,[t_DiskDrives] AS \n(\tselect ds.disk_volume\n\tfrom dbo.disk_space ds\n\twhere ds.collection_time_utc = (select max(i.collection_time_utc) from dbo.disk_space i)\n)\n,[t_FileIO] AS\n(\tSELECT\t[running_query] = 'File IO Stats', [sample_ms], [database_name], \n\t\t\t[file_name_DISPLAY] = [file_logical_name]+' '+QUOTENAME(case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end),\n\t\t\t[file_logical_name], [file_location], dv.disk_volume, [size_on_disk_bytes],\n\t\t\t[file_type] = case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end,\n\n\t\t\t[total_reads_writes] = [num_of_reads] + [num_of_writes], \n\t\t\t[num_of_bytes_read], [num_of_bytes_written], \n\t\t\t[total_reads_writes_bytes] = [num_of_bytes_read]+[num_of_bytes_written],\n\t\t\t\n\t\t\t[reads_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[writes_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[pcnt_reads_writes] = convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)) + ' / ' + convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)),\n\n\t\t\t--[num_of_reads], [io_stall_read_ms], [num_of_writes],  [io_stall_write_ms],\n\t\t\t--[io_stall], [io_pending_ms_ticks_total],\n\t\t\t\n\t\t\t[read_latency_ms] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else (([io_stall_read_ms] * 1.0)/[num_of_reads]) end),\n\t\t\t[write_latency_ms] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else (([io_stall_write_ms] * 1.0)/[num_of_writes]) end),\n\t\t\t[latency_ms] = convert(numeric(20,2), case when [num_of_reads] + [num_of_writes] = 0 then 0 else (([io_stall] * 1.0) / ([num_of_reads] + [num_of_writes])) end),\n\n\t\t\t[avg_bytes_per_read] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else ( ([num_of_bytes_read] * 1.0) / [num_of_reads] ) end),\n\t\t\t[avg_bytes_per_write] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else ( ([num_of_bytes_written] * 1.0) / [num_of_writes] ) end),\n\t\t\t[avg_bytes_per_transfer] = convert(numeric(20,2), case when [num_of_reads] = 0 and [num_of_writes] = 0 then 0 else ( (([num_of_bytes_read]+[num_of_bytes_written]) * 1.0) / ([num_of_reads]+[num_of_writes]) ) end)\n\tFROM [DiffStats] fis\n\tOUTER APPLY (\n\t\t\tselect top 1 dd.disk_volume\n\t\t\tfrom [t_DiskDrives] dd\n\t\t\twhere fis.file_location like (dd.disk_volume+'%')\n\t\t\torder by len(dd.disk_volume) desc\n\t\t) dv\n)\nselect *\nfrom [t_FileIO] fio\norder by ([num_of_bytes_read]+[num_of_bytes_written]) desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
              "refId": "Query-Db-File-Stats-Since-Startup"
            }
          ],
          "title": "Since Startup Before Duration",
          "transformations": [],
          "type": "table"
        },
        {
          "datasource": {
            "type": "mssql",
            "uid": "${datasource}"
          },
          "description": "exec sp_BlitzFirst @seconds = 60, @ExpertMode = 1",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sample_ms"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "displayName",
                    "value": "Sample Time"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 150
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "file_name_DISPLAY"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "File Name"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 200
                  },
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "running_query"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "collection_time_utc"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "file_logical_name"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": false
                  },
                  {
                    "id": "displayName",
                    "value": "File Name"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 150
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "file_location"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "database_name"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Database"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 150
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "disk_volume"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Drive"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "size_on_disk_bytes"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "decbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "File Size"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "file_type"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": false
                  },
                  {
                    "id": "displayName",
                    "value": "File Type"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "total_reads_writes"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "# Reads/Writes"
                  },
                  {
                    "id": "unit",
                    "value": "short"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "num_of_bytes_read"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "num_of_bytes_written"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "total_reads_writes_bytes"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Read/Written"
                  },
                  {
                    "id": "unit",
                    "value": "decbytes"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_pcnt"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes_pcnt"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "pcnt_reads_writes"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "% Read/Writes"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "read_latency_ms"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": false
                  },
                  {
                    "id": "displayName",
                    "value": "Avg Read Stall"
                  },
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "write_latency_ms"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": false
                  },
                  {
                    "id": "displayName",
                    "value": "Avg Write Stall"
                  },
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "latency_ms"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Avg Stall"
                  },
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "avg_bytes_per_read"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "avg_bytes_per_write"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "avg_bytes_per_transfer"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 18,
          "options": {
            "footer": {
              "enablePagination": true,
              "fields": [
                "sample_ms"
              ],
              "reducer": [
                "first"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "num_of_bytes_read"
              }
            ]
          },
          "pluginVersion": "9.0.2",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${datasource}"
              },
              "format": "table",
              "hide": false,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n--declare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\ndeclare @schedulers smallint;\ndeclare @StatstatsTop tinyint = 10;\ndeclare @StatsPercentTop int = 99;\ndeclare @collect_time_utc_snap1 datetime2;\ndeclare @collect_time_utc_snap2 datetime2;\n\n--select @start_time_utc = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), sqlserver_start_time) from sys.dm_os_sys_info;\nselect @schedulers = count(*) from sys.dm_os_schedulers where status = 'VISIBLE ONLINE' and is_online = 1;\n\nselect top 1 @collect_time_utc_snap2 = collection_time_utc\nfrom dbo.file_io_stats s2\nwhere s2.collection_time_utc <= @end_time_utc\norder by collection_time_utc desc;\n\nselect top 1 @collect_time_utc_snap1 = collection_time_utc\nfrom dbo.file_io_stats s1\nwhere collection_time_utc >= @start_time_utc\norder by collection_time_utc asc;\n\n--select @collect_time_utc_snap1, @collect_time_utc_snap2;\n\n;WITH [DiffStats] AS\n(\tSELECT\t-- Stats that weren't in the first snapshot\n\t\t\t--[ts2].[collection_time_utc],\n\t\t\t[ts2].[database_name],\n\t\t\t[ts2].[database_id],\n\t\t\t[ts2].[file_logical_name],\n\t\t\t[ts2].[file_id],\n\t\t\t[ts2].[file_location],\n\t\t\t[ts2].[sample_ms],\n\t\t\t[ts2].[num_of_reads],\n\t\t\t[ts2].[num_of_bytes_read],\n\t\t\t[ts2].[io_stall_read_ms],\n\t\t\t[ts2].[io_stall_queued_read_ms],\n\t\t\t[ts2].[num_of_writes],\n\t\t\t[ts2].[num_of_bytes_written],\n\t\t\t[ts2].[io_stall_write_ms],\n\t\t\t[ts2].[io_stall_queued_write_ms],\n\t\t\t[ts2].[io_stall],\n\t\t\t[ts2].[size_on_disk_bytes],\n\t\t\t[ts2].[io_pending_count]\n\tFROM dbo.file_io_stats AS [ts2]\n\tLEFT OUTER JOIN dbo.file_io_stats AS [ts1]\n\t\tON [ts2].[database_name] = [ts1].[database_name]\n\t\tAND [ts2].[file_logical_name] = [ts1].[file_logical_name]\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\tWHERE [ts1].[file_logical_name] IS NULL\n\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t--\n\tUNION\n\t--\n\tSELECT\t-- Diff of Stats in both snapshots\n\t\t\t--[collection_time_utc] = [ts2].[collection_time_utc] - [ts1].[collection_time_utc],\n\t\t\t[database_name] = [ts2].[database_name],\n\t\t\t[database_id] = [ts2].[database_id],\n\t\t\t[file_logical_name] = [ts2].[file_logical_name],\n\t\t\t[file_id] = [ts2].[file_id],\n\t\t\t[file_location] = [ts2].[file_location],\n\t\t\t[sample_ms] = [ts2].[sample_ms] - [ts1].[sample_ms],\n\t\t\t[num_of_reads] = [ts2].[num_of_reads] - [ts1].[num_of_reads],\n\t\t\t[num_of_bytes_read] = [ts2].[num_of_bytes_read] - [ts1].[num_of_bytes_read],\n\t\t\t[io_stall_read_ms] = [ts2].[io_stall_read_ms] - [ts1].[io_stall_read_ms],\n\t\t\t[io_stall_queued_read_ms] = [ts2].[io_stall_queued_read_ms] - [ts1].[io_stall_queued_read_ms],\n\t\t\t[num_of_writes] = [ts2].[num_of_writes] - [ts1].[num_of_writes],\n\t\t\t[num_of_bytes_written] = [ts2].[num_of_bytes_written] - [ts1].[num_of_bytes_written],\n\t\t\t[io_stall_write_ms] = [ts2].[io_stall_write_ms] - [ts1].[io_stall_write_ms],\n\t\t\t[io_stall_queued_write_ms] = [ts2].[io_stall_queued_write_ms] - [ts1].[io_stall_queued_write_ms],\n\t\t\t[io_stall] = [ts2].[io_stall] - [ts1].[io_stall],\n\t\t\t[size_on_disk_bytes] = [ts2].[size_on_disk_bytes],\n\t\t\t[io_pending_count] = [ts2].[io_pending_count] - [ts1].[io_pending_count]\n\tFROM dbo.file_io_stats AS [ts2]\n\tLEFT OUTER JOIN dbo.file_io_stats AS [ts1]\n\t\tON [ts2].[database_name] = [ts1].[database_name]\n\t\tAND [ts2].[file_logical_name] = [ts1].[file_logical_name]\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\tWHERE [ts1].[file_logical_name] IS NOT NULL\n\tAND ( ([ts2].[num_of_reads]+[ts2].[num_of_writes]) - ([ts1].[num_of_reads]+[ts1].[num_of_writes]) ) > 0\n\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n)\n,[t_DiskDrives] AS \n(\tselect ds.disk_volume\n\tfrom dbo.disk_space ds\n\twhere ds.collection_time_utc = (select max(i.collection_time_utc) from dbo.disk_space i)\n)\n,[t_FileIO] AS\n(\tSELECT\t[running_query] = 'File IO Stats', [sample_ms], [database_name], \n\t\t\t[file_name_DISPLAY] = [file_logical_name]+' '+QUOTENAME(case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end),\n\t\t\t[file_logical_name], [file_location], dv.disk_volume, [size_on_disk_bytes],\n\t\t\t[file_type] = case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end,\n\n\t\t\t[total_reads_writes] = [num_of_reads] + [num_of_writes], \n\t\t\t[num_of_bytes_read], [num_of_bytes_written], \n\t\t\t[total_reads_writes_bytes] = [num_of_bytes_read]+[num_of_bytes_written],\n\t\t\t\n\t\t\t[reads_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[writes_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[pcnt_reads_writes] = convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)) + ' / ' + convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)),\n\n\t\t\t--[num_of_reads], [io_stall_read_ms], [num_of_writes],  [io_stall_write_ms],\n\t\t\t--[io_stall], [io_pending_ms_ticks_total],\n\t\t\t\n\t\t\t[read_latency_ms] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else (([io_stall_read_ms] * 1.0)/[num_of_reads]) end),\n\t\t\t[write_latency_ms] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else (([io_stall_write_ms] * 1.0)/[num_of_writes]) end),\n\t\t\t[latency_ms] = convert(numeric(20,2), case when [num_of_reads] + [num_of_writes] = 0 then 0 else (([io_stall] * 1.0) / ([num_of_reads] + [num_of_writes])) end),\n\n\t\t\t[avg_bytes_per_read] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else ( ([num_of_bytes_read] * 1.0) / [num_of_reads] ) end),\n\t\t\t[avg_bytes_per_write] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else ( ([num_of_bytes_written] * 1.0) / [num_of_writes] ) end),\n\t\t\t[avg_bytes_per_transfer] = convert(numeric(20,2), case when [num_of_reads] = 0 and [num_of_writes] = 0 then 0 else ( (([num_of_bytes_read]+[num_of_bytes_written]) * 1.0) / ([num_of_reads]+[num_of_writes]) ) end)\n\tFROM [DiffStats] fis\n\tOUTER APPLY (\n\t\t\tselect top 1 dd.disk_volume\n\t\t\tfrom [t_DiskDrives] dd\n\t\t\twhere fis.file_location like (dd.disk_volume+'%')\n\t\t\torder by len(dd.disk_volume) desc\n\t\t) dv\n)\nselect *\nfrom [t_FileIO] fio\norder by ([num_of_bytes_read]+[num_of_bytes_written]) desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
              "refId": "Query-Db-File-Stats-Since-Startup"
            }
          ],
          "title": "In Selected Time Duration",
          "transformations": [],
          "type": "table"
        }
      ],
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "File IO Stats - Selective - \"__${sql_schedulers} CPUs__\" @ ${collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 4,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${datasource}"
          },
          "description": "exec sp_BlitzFirst @seconds = 60, @ExpertMode = 1",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "Wait Stats (ms)",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "hue",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "decbytes"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 15,
            "w": 24,
            "x": 0,
            "y": 3
          },
          "id": 2,
          "options": {
            "legend": {
              "calcs": [
                "sum",
                "last"
              ],
              "displayMode": "table",
              "placement": "right",
              "sortBy": "Total",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${datasource}"
              },
              "format": "time_series",
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\ndeclare @FileIOStatsTop tinyint = 10;\ndeclare @StatsPercentTop int = 99;\n\n;WITH [Stats] AS\n(\n\tSELECT\t[collection_time_utc],\n\t\t\t[database_name],\n\t\t\t--[database_id],\n\t\t\t[file_logical_name],\n\t\t\t--[file_id],\n\t\t\t[file_location],\n\t\t\t[sample_ms_delta],\n\t\t\t--[num_of_reads],\n\t\t\t[read_write_bytes_delta],\n\t\t\t[read_bytes_delta],\n\t\t\t--[io_stall_read_ms],\n\t\t\t--[io_stall_queued_read_ms],\n\t\t\t--[num_of_writes],\n\t\t\t[writes_bytes_delta],\n\t\t\t--[io_stall_write_ms],\n\t\t\t--[io_stall_queued_write_ms],\n\t\t\t--[io_stall],\n\t\t\t[io_stall_delta],\n\t\t\t--[size_on_disk_bytes],\n\t\t\t--[io_pending_count],\n\t\t\t--[io_pending_ms_ticks_total],\n\t\t\t--[io_pending_ms_ticks_avg],\n\t\t\t--[io_pending_ms_ticks_max],\n\t\t\t--[io_pending_ms_ticks_min]\n\t\t\t[StatsRank] = ROW_NUMBER() OVER(PARTITION BY [collection_time_utc] ORDER BY read_write_bytes_delta DESC),\n\t\t\t[Percentage] = ((100.0 * [read_write_bytes_delta]) / (SUM ([read_write_bytes_delta]) OVER (PARTITION BY [collection_time_utc]))),\n\t\t\t[PercentageTotal] = ( (100.0 * ( SUM([read_write_bytes_delta]) \n\t\t\t\t\t\t\t\t\t\t\t OVER(PARTITION BY [collection_time_utc] \n\t\t\t\t\t\t\t\t\t\t\t ORDER BY [read_write_bytes_delta] DESC, [io_stall_delta] desc) )\n\t\t\t\t\t\t\t\t  ) / (SUM ([read_write_bytes_delta]) OVER (PARTITION BY [collection_time_utc])) )\n\tFROM dbo.[vw_file_io_stats_deltas] AS [Stats]\n\tWHERE collection_time_utc between @start_time_utc and @end_time_utc\n\t\n)\nSELECT\ttime = [collection_time_utc]\n\t\t--,[database_name]\n\t\t,[metric] =  [database_name]+ ' (__ '+[file_logical_name]+' __)'\n\t\t--,[file_logical_name]\n\t\t--,[file_location]\n\t\t--,[sample_ms_delta]\n\t\t--,[read_write_bytes_delta]\n\t\t--,[read_bytes_delta]\n\t\t--,[writes_bytes_delta]\n\t\t--,[StatsRank]\n\t\t--,[Percentage]\n\t\t--,[PercentageTotal]\n\t\t,[value] = [read_write_bytes_delta]\nFROM [Stats] as cur\nWHERE [StatsRank] <= @FileIOStatsTop\nAND [PercentageTotal] <= @StatsPercentTop\nORDER BY [time] ASC, [read_write_bytes_delta] DESC, [io_stall_delta] DESC\nOPTION(RECOMPILE);\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc;",
              "refId": "A"
            }
          ],
          "title": "[${server}] - Db File IO Stats - Read/Writes Data",
          "type": "timeseries"
        }
      ],
      "repeat": "datasource",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "File IO Stats - Reads/Writes (Data) - Histogram -  [$fqdn] - [$ip] - @ ${collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 21,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${datasource}"
          },
          "description": "exec sp_BlitzFirst @seconds = 60, @ExpertMode = 1",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "Wait Stats (ms)",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "hue",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 15,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 19,
          "options": {
            "legend": {
              "calcs": [
                "sum",
                "last"
              ],
              "displayMode": "table",
              "placement": "right",
              "sortBy": "Total",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${datasource}"
              },
              "format": "time_series",
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\ndeclare @FileIOStatsTop tinyint = 10;\ndeclare @StatsPercentTop int = 99;\n\n;WITH [Stats] AS\n(\n\tSELECT\t[collection_time_utc],\n\t\t\t[database_name],\n\t\t\t--[database_id],\n\t\t\t[file_logical_name],\n\t\t\t--[file_id],\n\t\t\t[file_location],\n\t\t\t[sample_ms_delta],\n\t\t\t--[num_of_reads],\n\t\t\t[read_write_bytes_delta],\n\t\t\t[read_writes_delta],\n\t\t\t[read_bytes_delta],\n\t\t\t--[io_stall_read_ms],\n\t\t\t--[io_stall_queued_read_ms],\n\t\t\t--[num_of_writes],\n\t\t\t[writes_bytes_delta],\n\t\t\t--[io_stall_write_ms],\n\t\t\t--[io_stall_queued_write_ms],\n\t\t\t--[io_stall],\n\t\t\t[io_stall_delta],\n\t\t\t--[size_on_disk_bytes],\n\t\t\t--[io_pending_count],\n\t\t\t--[io_pending_ms_ticks_total],\n\t\t\t--[io_pending_ms_ticks_avg],\n\t\t\t--[io_pending_ms_ticks_max],\n\t\t\t--[io_pending_ms_ticks_min]\n\t\t\t[StatsRank] = ROW_NUMBER() OVER(PARTITION BY [collection_time_utc] ORDER BY read_writes_delta DESC),\n\t\t\t[Percentage] = ((100.0 * [read_writes_delta]) / (SUM ([read_writes_delta]) OVER (PARTITION BY [collection_time_utc]))),\n\t\t\t[PercentageTotal] = ( (100.0 * ( SUM([read_writes_delta]) \n\t\t\t\t\t\t\t\t\t\t\t OVER(PARTITION BY [collection_time_utc] \n\t\t\t\t\t\t\t\t\t\t\t ORDER BY [read_writes_delta] DESC, [io_stall_delta] desc) )\n\t\t\t\t\t\t\t\t  ) / (SUM ([read_writes_delta]) OVER (PARTITION BY [collection_time_utc])) )\n\tFROM dbo.[vw_file_io_stats_deltas] AS [Stats]\n\tWHERE collection_time_utc between @start_time_utc and @end_time_utc\n\t\n)\nSELECT\ttime = [collection_time_utc]\n\t\t--,[database_name]\n\t\t,[metric] =  [database_name]+ ' (__ '+[file_logical_name]+' __)'\n\t\t--,[file_logical_name]\n\t\t--,[file_location]\n\t\t--,[sample_ms_delta]\n\t\t--,[read_write_bytes_delta]\n\t\t--,[read_bytes_delta]\n\t\t--,[writes_bytes_delta]\n\t\t--,[StatsRank]\n\t\t--,[Percentage]\n\t\t--,[PercentageTotal]\n\t\t,[value] = [read_writes_delta]\nFROM [Stats] as cur\nWHERE [StatsRank] <= @FileIOStatsTop\nAND [PercentageTotal] <= @StatsPercentTop\nORDER BY [time] ASC, [read_writes_delta] DESC, [io_stall_delta] DESC\nOPTION(RECOMPILE);\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc;",
              "refId": "A"
            }
          ],
          "title": "[${server}] - Db File IO Stats - # Read/Writes",
          "type": "timeseries"
        }
      ],
      "title": "File IO Stats - Read/Writes (#) - Histogram -  [$fqdn] - [$ip] - @ ${collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 24,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${datasource}"
          },
          "description": "exec sp_BlitzFirst @seconds = 60, @ExpertMode = 1",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "running_query"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "collection_time_utc"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "sample_ms"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "displayName",
                    "value": "Sample Time"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "database_count"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Databases"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "files_count"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "displayName",
                    "value": "Db Files"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "disk_volume"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Disk Drive"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 250
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "capacity_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Disk Capacity"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "free_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Disk Free"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "db_files_size_on_disk_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Db Files Size"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "total_reads_writes"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "short"
                  },
                  {
                    "id": "displayName",
                    "value": "# Reads/Writes"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_mb"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes_mb"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_writes_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Read/Written"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "pcnt_reads_writes"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "displayName",
                    "value": "% Read/Writes"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "id": 10,
          "options": {
            "footer": {
              "enablePagination": true,
              "fields": [
                "sample_ms"
              ],
              "reducer": [
                "first"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.0.2",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${datasource}"
              },
              "format": "table",
              "hide": false,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n--declare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"/* SQLMonitor - File IO Stats Since Startup */\nset nocount on;\ndeclare @start_time datetime;\ndeclare @schedulers smallint;\ndeclare @cpu_time_min decimal(18,1);\ndeclare @IOStatsTop tinyint = 10;\ndeclare @IOPercentTop int = 99;\n\nselect @start_time = sqlserver_start_time from sys.dm_os_sys_info;\nselect @schedulers = count(*) from sys.dm_os_schedulers where status = 'VISIBLE ONLINE' and is_online = 1;\n-- @cpu_time_min = sum(total_cpu_usage_ms/1000.0)/60.0\n\n;WITH [t_DiskDrives] AS (\n\tselect ds.disk_volume,ds.capacity_mb, ds.free_mb\n\tfrom dbo.disk_space ds\n\twhere ds.collection_time_utc = (select max(i.collection_time_utc) from dbo.disk_space i)\n)\n,[t_FileIO] AS\n\t(\tSELECT\n\t\t\t[running_query] = 'File IO Stats', [collection_time_utc], [sample_ms], [database_name], \n\t\t\t[file_name_DISPLAY] = [file_logical_name]+' '+QUOTENAME(case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end),\n\t\t\t[file_logical_name], [file_location], [size_on_disk_bytes],\n\t\t\t[file_type] = case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end,\n\n\t\t\t[total_reads_writes] = [num_of_reads] + [num_of_writes], \n\t\t\t[num_of_bytes_read], [num_of_bytes_written], \n\t\t\t[total_reads_writes_bytes] = [num_of_bytes_read]+[num_of_bytes_written],\n\t\t\t\n\t\t\t[reads_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[writes_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[pcnt_reads_writes] = convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)) + ' / ' + convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)),\n\n\t\t\t--[num_of_reads], [io_stall_read_ms], [num_of_writes],  [io_stall_write_ms],\n\t\t\t--[io_stall], [io_pending_ms_ticks_total],\n\t\t\t\n\t\t\t[read_latency_ms] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else (([io_stall_read_ms] * 1.0)/[num_of_reads]) end),\n\t\t\t[write_latency_ms] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else (([io_stall_write_ms] * 1.0)/[num_of_writes]) end),\n\t\t\t[latency_ms] = convert(numeric(20,2), case when [num_of_reads] + [num_of_writes] = 0 then 0 else (([io_stall] * 1.0) / ([num_of_reads] + [num_of_writes])) end),\n\n\t\t\t[avg_bytes_per_read] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else ( ([num_of_bytes_read] * 1.0) / [num_of_reads] ) end),\n\t\t\t[avg_bytes_per_write] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else ( ([num_of_bytes_written] * 1.0) / [num_of_writes] ) end),\n\t\t\t[avg_bytes_per_transfer] = convert(numeric(20,2), case when [num_of_reads] = 0 and [num_of_writes] = 0 then 0 else ( (([num_of_bytes_read]+[num_of_bytes_written]) * 1.0) / ([num_of_reads]+[num_of_writes]) ) end),\n\t\t\t\n\t\t\tdv.disk_volume, dv.capacity_mb, dv.free_mb\n\t\t\t\n\t\tFROM dbo.file_io_stats fis\n\t\tOUTER APPLY (\n\t\t\t\tselect top 1 *\n\t\t\t\tfrom [t_DiskDrives] dd\n\t\t\t\twhere fis.file_location like (dd.disk_volume+'%')\n\t\t\t\torder by len(dd.disk_volume) desc\n\t\t\t) dv\n\t\tWHERE fis.collection_time_utc = (SELECT MAX(i.collection_time_utc) FROM dbo.file_io_stats i)\n    )\nselect\t[running_query] = max(running_query),\n\t\t[collection_time_utc] = max(collection_time_utc),\n\t\t[sample_ms] = max(sample_ms),\n\t\t[database_count] = count(distinct database_name),\n\t\t[files_count] = count(*),\n\t\t[disk_volume] = max(disk_volume), \n\t\t[capacity_mb] = max(capacity_mb), \n\t\t[free_mb] = max(free_mb),\n\t\t[db_files_size_on_disk_mb] = convert(numeric(20,2),sum(size_on_disk_bytes*1.0/1024/1024)),\n\t\t[total_reads_writes] = sum(total_reads_writes),\n\t\t[reads_mb] = convert(numeric(20,2),sum(num_of_bytes_read)/1024.0/1024),\n\t\t[writes_mb] = convert(numeric(20,2),sum(num_of_bytes_written)/1024.0/1024),\n\t\t[reads_writes_mb] = convert(numeric(20,2),sum(num_of_bytes_read+num_of_bytes_written)/1024.0/1024),\n\t\t[pcnt_reads_writes] = convert(varchar,convert(numeric(20,2),(sum(num_of_bytes_read)*100.0/sum(num_of_bytes_read+num_of_bytes_written)))) \n\t\t\t\t\t\t\t\t+ ' / ' + \n\t\t\t\t\t\t\t\tconvert(varchar,convert(numeric(20,2),(sum(num_of_bytes_written)*100.0/sum(num_of_bytes_read+num_of_bytes_written))))\nfrom [t_FileIO] fio\ngroup by disk_volume\norder by [reads_writes_mb] desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
              "refId": "Query-Db-File-Stats-Since-Startup"
            }
          ],
          "title": "Disk IO Stats - Since Startup  __ till ___${collection_time_utc:date:YYYY-MM-DD HH.mm}___",
          "transformations": [],
          "type": "table"
        }
      ],
      "title": "Disk IO Stats - Since Startup__till____${collection_time_utc:date:YYYY-MM-DD HH.mm}_____ - \"__${sql_schedulers} CPUs__\"  - [$fqdn] - [$ip]",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 30,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${datasource}"
          },
          "description": "exec sp_BlitzFirst @seconds = 60, @ExpertMode = 1",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "running_query"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "collection_time_utc"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "sample_ms"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "displayName",
                    "value": "Sample Time"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "database_count"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Databases"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "files_count"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "displayName",
                    "value": "Db Files"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "disk_volume"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Disk Drive"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 250
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "capacity_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Disk Capacity"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "free_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Disk Free"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "db_files_size_on_disk_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Db Files Size"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "total_reads_writes"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "short"
                  },
                  {
                    "id": "displayName",
                    "value": "# Reads/Writes"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_mb"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes_mb"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_writes_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Read/Written"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "pcnt_reads_writes"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "displayName",
                    "value": "% Read/Writes"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 6
          },
          "id": 31,
          "options": {
            "footer": {
              "enablePagination": true,
              "fields": [
                "sample_ms"
              ],
              "reducer": [
                "first"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.0.2",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${datasource}"
              },
              "format": "table",
              "hide": false,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\n--set @start_time_utc = $__timeFrom();\nset @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\n--set @end_time_utc = $__timeTo();\nset @end_time_utc = $__timeFrom();\n--select @start_time_utc as start_time, @end_time_utc as end_time;\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\ndeclare @schedulers smallint;\ndeclare @StatstatsTop tinyint = 10;\ndeclare @StatsPercentTop int = 99;\ndeclare @collect_time_utc_snap1 datetime2;\ndeclare @collect_time_utc_snap2 datetime2;\n\n--select @start_time_utc = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), sqlserver_start_time) from sys.dm_os_sys_info;\nselect @schedulers = count(*) from sys.dm_os_schedulers where status = 'VISIBLE ONLINE' and is_online = 1;\n\nselect top 1 @collect_time_utc_snap2 = collection_time_utc\nfrom dbo.file_io_stats s2\nwhere s2.collection_time_utc <= @end_time_utc\norder by collection_time_utc desc;\n\nselect top 1 @collect_time_utc_snap1 = collection_time_utc\nfrom dbo.file_io_stats s1\nwhere collection_time_utc >= @start_time_utc\norder by collection_time_utc asc;\n\n--select @collect_time_utc_snap1, @collect_time_utc_snap2;\n\n;WITH [DiffStats] AS\n(\tSELECT\t-- Stats that weren't in the first snapshot\n\t\t\t--[ts2].[collection_time_utc],\n\t\t\t[ts2].[database_name],\n\t\t\t[ts2].[database_id],\n\t\t\t[ts2].[file_logical_name],\n\t\t\t[ts2].[file_id],\n\t\t\t[ts2].[file_location],\n\t\t\t[ts2].[sample_ms],\n\t\t\t[ts2].[num_of_reads],\n\t\t\t[ts2].[num_of_bytes_read],\n\t\t\t[ts2].[io_stall_read_ms],\n\t\t\t[ts2].[io_stall_queued_read_ms],\n\t\t\t[ts2].[num_of_writes],\n\t\t\t[ts2].[num_of_bytes_written],\n\t\t\t[ts2].[io_stall_write_ms],\n\t\t\t[ts2].[io_stall_queued_write_ms],\n\t\t\t[ts2].[io_stall],\n\t\t\t[ts2].[size_on_disk_bytes],\n\t\t\t[ts2].[io_pending_count]\n\tFROM dbo.file_io_stats AS [ts2]\n\tLEFT OUTER JOIN dbo.file_io_stats AS [ts1]\n\t\tON [ts2].[database_name] = [ts1].[database_name]\n\t\tAND [ts2].[file_logical_name] = [ts1].[file_logical_name]\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\tWHERE [ts1].[file_logical_name] IS NULL\n\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t--\n\tUNION\n\t--\n\tSELECT\t-- Diff of Stats in both snapshots\n\t\t\t--[collection_time_utc] = [ts2].[collection_time_utc] - [ts1].[collection_time_utc],\n\t\t\t[database_name] = [ts2].[database_name],\n\t\t\t[database_id] = [ts2].[database_id],\n\t\t\t[file_logical_name] = [ts2].[file_logical_name],\n\t\t\t[file_id] = [ts2].[file_id],\n\t\t\t[file_location] = [ts2].[file_location],\n\t\t\t[sample_ms] = [ts2].[sample_ms] - [ts1].[sample_ms],\n\t\t\t[num_of_reads] = [ts2].[num_of_reads] - [ts1].[num_of_reads],\n\t\t\t[num_of_bytes_read] = [ts2].[num_of_bytes_read] - [ts1].[num_of_bytes_read],\n\t\t\t[io_stall_read_ms] = [ts2].[io_stall_read_ms] - [ts1].[io_stall_read_ms],\n\t\t\t[io_stall_queued_read_ms] = [ts2].[io_stall_queued_read_ms] - [ts1].[io_stall_queued_read_ms],\n\t\t\t[num_of_writes] = [ts2].[num_of_writes] - [ts1].[num_of_writes],\n\t\t\t[num_of_bytes_written] = [ts2].[num_of_bytes_written] - [ts1].[num_of_bytes_written],\n\t\t\t[io_stall_write_ms] = [ts2].[io_stall_write_ms] - [ts1].[io_stall_write_ms],\n\t\t\t[io_stall_queued_write_ms] = [ts2].[io_stall_queued_write_ms] - [ts1].[io_stall_queued_write_ms],\n\t\t\t[io_stall] = [ts2].[io_stall] - [ts1].[io_stall],\n\t\t\t[size_on_disk_bytes] = [ts2].[size_on_disk_bytes],\n\t\t\t[io_pending_count] = [ts2].[io_pending_count] - [ts1].[io_pending_count]\n\tFROM dbo.file_io_stats AS [ts2]\n\tLEFT OUTER JOIN dbo.file_io_stats AS [ts1]\n\t\tON [ts2].[database_name] = [ts1].[database_name]\n\t\tAND [ts2].[file_logical_name] = [ts1].[file_logical_name]\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\tWHERE [ts1].[file_logical_name] IS NOT NULL\n\tAND ( ([ts2].[num_of_reads]+[ts2].[num_of_writes]) - ([ts1].[num_of_reads]+[ts1].[num_of_writes]) ) > 0\n\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n)\n,[t_DiskDrives] AS \n(\tselect ds.disk_volume, ds.capacity_mb, ds.free_mb\n\tfrom dbo.disk_space ds\n\twhere ds.collection_time_utc = (select max(i.collection_time_utc) from dbo.disk_space i)\n)\n,[t_FileIO] AS\n(\tSELECT\t[running_query] = 'File IO Stats', [sample_ms], [database_name], \n\t\t\t[file_name_DISPLAY] = [file_logical_name]+' '+QUOTENAME(case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end),\n\t\t\t[file_logical_name], [file_location], dv.disk_volume, [size_on_disk_bytes],\n\t\t\t[file_type] = case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end,\n\n\t\t\t[total_reads_writes] = [num_of_reads] + [num_of_writes], \n\t\t\t[num_of_bytes_read], [num_of_bytes_written], \n\t\t\t[total_reads_writes_bytes] = [num_of_bytes_read]+[num_of_bytes_written],\n\t\t\t\n\t\t\t[reads_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[writes_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[pcnt_reads_writes] = convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)) + ' / ' + convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)),\n\n\t\t\t--[num_of_reads], [io_stall_read_ms], [num_of_writes],  [io_stall_write_ms],\n\t\t\t--[io_stall], [io_pending_ms_ticks_total],\n\t\t\t\n\t\t\t[read_latency_ms] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else (([io_stall_read_ms] * 1.0)/[num_of_reads]) end),\n\t\t\t[write_latency_ms] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else (([io_stall_write_ms] * 1.0)/[num_of_writes]) end),\n\t\t\t[latency_ms] = convert(numeric(20,2), case when [num_of_reads] + [num_of_writes] = 0 then 0 else (([io_stall] * 1.0) / ([num_of_reads] + [num_of_writes])) end),\n\n\t\t\t[avg_bytes_per_read] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else ( ([num_of_bytes_read] * 1.0) / [num_of_reads] ) end),\n\t\t\t[avg_bytes_per_write] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else ( ([num_of_bytes_written] * 1.0) / [num_of_writes] ) end),\n\t\t\t[avg_bytes_per_transfer] = convert(numeric(20,2), case when [num_of_reads] = 0 and [num_of_writes] = 0 then 0 else ( (([num_of_bytes_read]+[num_of_bytes_written]) * 1.0) / ([num_of_reads]+[num_of_writes]) ) end)\n\tFROM [DiffStats] fis\n\tOUTER APPLY (\n\t\t\tselect top 1 dd.*\n\t\t\tfrom [t_DiskDrives] dd\n\t\t\twhere fis.file_location like (dd.disk_volume+'%')\n\t\t\torder by len(dd.disk_volume) desc\n\t\t) dv\n)\nselect\t[running_query] = max(running_query),\n\t\t--[collection_time_utc] = max(collection_time_utc),\n\t\t[sample_ms] = max(sample_ms),\n\t\t[database_count] = count(distinct database_name),\n\t\t[files_count] = count(*),\n\t\t[disk_volume] = max(dd.disk_volume), \n\t\t[capacity_mb] = max(dd.capacity_mb), \n\t\t[free_mb] = max(dd.free_mb),\n\t\t[db_files_size_on_disk_mb] = convert(numeric(20,2),sum(size_on_disk_bytes/1024.0/1024)),\n\t\t[total_reads_writes] = sum(total_reads_writes),\n\t\t[reads_mb] = convert(numeric(20,2),sum(num_of_bytes_read/1024.0/1024)),\n\t\t[writes_mb] = convert(numeric(20,2),sum(num_of_bytes_written/1024.0/1024)),\n\t\t[reads_writes_mb] = convert(numeric(20,2),sum( (num_of_bytes_read+num_of_bytes_written)/1024.0/1024 )),\n\t\t[pcnt_reads_writes] = convert(varchar,convert(numeric(20,2),(sum(num_of_bytes_read)*100.0/sum(num_of_bytes_read+num_of_bytes_written)))) \n\t\t\t\t\t\t\t\t+ ' / ' + \n\t\t\t\t\t\t\t\tconvert(varchar,convert(numeric(20,2),(sum(num_of_bytes_written)*100.0/sum(num_of_bytes_read+num_of_bytes_written))))\nfrom [t_FileIO] fio\nleft join [t_DiskDrives] dd on dd.disk_volume = fio.disk_volume\ngroup by dd.disk_volume\norder by [reads_writes_mb] desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
              "refId": "Query-Db-File-Stats-Since-Startup"
            }
          ],
          "title": "Since Startup Before Duration",
          "transformations": [],
          "type": "table"
        },
        {
          "datasource": {
            "type": "mssql",
            "uid": "${datasource}"
          },
          "description": "exec sp_BlitzFirst @seconds = 60, @ExpertMode = 1",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "running_query"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "collection_time_utc"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "sample_ms"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "displayName",
                    "value": "Sample Time"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "database_count"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Databases"
                  },
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "files_count"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "displayName",
                    "value": "Db Files"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "disk_volume"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Disk Drive"
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 250
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "capacity_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Disk Capacity"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "free_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Disk Free"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "db_files_size_on_disk_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Db Files Size"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "total_reads_writes"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "short"
                  },
                  {
                    "id": "displayName",
                    "value": "# Reads/Writes"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_mb"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes_mb"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_writes_mb"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "mbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "Read/Written"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "pcnt_reads_writes"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  },
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "displayName",
                    "value": "% Read/Writes"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 16
          },
          "id": 32,
          "options": {
            "footer": {
              "enablePagination": true,
              "fields": [
                "sample_ms"
              ],
              "reducer": [
                "first"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.0.2",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${datasource}"
              },
              "format": "table",
              "hide": false,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n--declare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\ndeclare @schedulers smallint;\ndeclare @StatstatsTop tinyint = 10;\ndeclare @StatsPercentTop int = 99;\ndeclare @collect_time_utc_snap1 datetime2;\ndeclare @collect_time_utc_snap2 datetime2;\n\n--select @start_time_utc = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), sqlserver_start_time) from sys.dm_os_sys_info;\nselect @schedulers = count(*) from sys.dm_os_schedulers where status = 'VISIBLE ONLINE' and is_online = 1;\n\nselect top 1 @collect_time_utc_snap2 = collection_time_utc\nfrom dbo.file_io_stats s2\nwhere s2.collection_time_utc <= @end_time_utc\norder by collection_time_utc desc;\n\nselect top 1 @collect_time_utc_snap1 = collection_time_utc\nfrom dbo.file_io_stats s1\nwhere collection_time_utc >= @start_time_utc\norder by collection_time_utc asc;\n\n--select @collect_time_utc_snap1, @collect_time_utc_snap2;\n\n;WITH [DiffStats] AS\n(\tSELECT\t-- Stats that weren't in the first snapshot\n\t\t\t--[ts2].[collection_time_utc],\n\t\t\t[ts2].[database_name],\n\t\t\t[ts2].[database_id],\n\t\t\t[ts2].[file_logical_name],\n\t\t\t[ts2].[file_id],\n\t\t\t[ts2].[file_location],\n\t\t\t[ts2].[sample_ms],\n\t\t\t[ts2].[num_of_reads],\n\t\t\t[ts2].[num_of_bytes_read],\n\t\t\t[ts2].[io_stall_read_ms],\n\t\t\t[ts2].[io_stall_queued_read_ms],\n\t\t\t[ts2].[num_of_writes],\n\t\t\t[ts2].[num_of_bytes_written],\n\t\t\t[ts2].[io_stall_write_ms],\n\t\t\t[ts2].[io_stall_queued_write_ms],\n\t\t\t[ts2].[io_stall],\n\t\t\t[ts2].[size_on_disk_bytes],\n\t\t\t[ts2].[io_pending_count]\n\tFROM dbo.file_io_stats AS [ts2]\n\tLEFT OUTER JOIN dbo.file_io_stats AS [ts1]\n\t\tON [ts2].[database_name] = [ts1].[database_name]\n\t\tAND [ts2].[file_logical_name] = [ts1].[file_logical_name]\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\tWHERE [ts1].[file_logical_name] IS NULL\n\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t--\n\tUNION\n\t--\n\tSELECT\t-- Diff of Stats in both snapshots\n\t\t\t--[collection_time_utc] = [ts2].[collection_time_utc] - [ts1].[collection_time_utc],\n\t\t\t[database_name] = [ts2].[database_name],\n\t\t\t[database_id] = [ts2].[database_id],\n\t\t\t[file_logical_name] = [ts2].[file_logical_name],\n\t\t\t[file_id] = [ts2].[file_id],\n\t\t\t[file_location] = [ts2].[file_location],\n\t\t\t[sample_ms] = [ts2].[sample_ms] - [ts1].[sample_ms],\n\t\t\t[num_of_reads] = [ts2].[num_of_reads] - [ts1].[num_of_reads],\n\t\t\t[num_of_bytes_read] = [ts2].[num_of_bytes_read] - [ts1].[num_of_bytes_read],\n\t\t\t[io_stall_read_ms] = [ts2].[io_stall_read_ms] - [ts1].[io_stall_read_ms],\n\t\t\t[io_stall_queued_read_ms] = [ts2].[io_stall_queued_read_ms] - [ts1].[io_stall_queued_read_ms],\n\t\t\t[num_of_writes] = [ts2].[num_of_writes] - [ts1].[num_of_writes],\n\t\t\t[num_of_bytes_written] = [ts2].[num_of_bytes_written] - [ts1].[num_of_bytes_written],\n\t\t\t[io_stall_write_ms] = [ts2].[io_stall_write_ms] - [ts1].[io_stall_write_ms],\n\t\t\t[io_stall_queued_write_ms] = [ts2].[io_stall_queued_write_ms] - [ts1].[io_stall_queued_write_ms],\n\t\t\t[io_stall] = [ts2].[io_stall] - [ts1].[io_stall],\n\t\t\t[size_on_disk_bytes] = [ts2].[size_on_disk_bytes],\n\t\t\t[io_pending_count] = [ts2].[io_pending_count] - [ts1].[io_pending_count]\n\tFROM dbo.file_io_stats AS [ts2]\n\tLEFT OUTER JOIN dbo.file_io_stats AS [ts1]\n\t\tON [ts2].[database_name] = [ts1].[database_name]\n\t\tAND [ts2].[file_logical_name] = [ts1].[file_logical_name]\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\tWHERE [ts1].[file_logical_name] IS NOT NULL\n\tAND ( ([ts2].[num_of_reads]+[ts2].[num_of_writes]) - ([ts1].[num_of_reads]+[ts1].[num_of_writes]) ) > 0\n\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n)\n,[t_DiskDrives] AS \n(\tselect ds.disk_volume, ds.capacity_mb, ds.free_mb\n\tfrom dbo.disk_space ds\n\twhere ds.collection_time_utc = (select max(i.collection_time_utc) from dbo.disk_space i)\n)\n,[t_FileIO] AS\n(\tSELECT\t[running_query] = 'File IO Stats', [sample_ms], [database_name], \n\t\t\t[file_name_DISPLAY] = [file_logical_name]+' '+QUOTENAME(case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end),\n\t\t\t[file_logical_name], [file_location], dv.disk_volume, [size_on_disk_bytes],\n\t\t\t[file_type] = case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end,\n\n\t\t\t[total_reads_writes] = [num_of_reads] + [num_of_writes], \n\t\t\t[num_of_bytes_read], [num_of_bytes_written], \n\t\t\t[total_reads_writes_bytes] = [num_of_bytes_read]+[num_of_bytes_written],\n\t\t\t\n\t\t\t[reads_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[writes_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[pcnt_reads_writes] = convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)) + ' / ' + convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)),\n\n\t\t\t--[num_of_reads], [io_stall_read_ms], [num_of_writes],  [io_stall_write_ms],\n\t\t\t--[io_stall], [io_pending_ms_ticks_total],\n\t\t\t\n\t\t\t[read_latency_ms] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else (([io_stall_read_ms] * 1.0)/[num_of_reads]) end),\n\t\t\t[write_latency_ms] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else (([io_stall_write_ms] * 1.0)/[num_of_writes]) end),\n\t\t\t[latency_ms] = convert(numeric(20,2), case when [num_of_reads] + [num_of_writes] = 0 then 0 else (([io_stall] * 1.0) / ([num_of_reads] + [num_of_writes])) end),\n\n\t\t\t[avg_bytes_per_read] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else ( ([num_of_bytes_read] * 1.0) / [num_of_reads] ) end),\n\t\t\t[avg_bytes_per_write] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else ( ([num_of_bytes_written] * 1.0) / [num_of_writes] ) end),\n\t\t\t[avg_bytes_per_transfer] = convert(numeric(20,2), case when [num_of_reads] = 0 and [num_of_writes] = 0 then 0 else ( (([num_of_bytes_read]+[num_of_bytes_written]) * 1.0) / ([num_of_reads]+[num_of_writes]) ) end)\n\tFROM [DiffStats] fis\n\tOUTER APPLY (\n\t\t\tselect top 1 dd.*\n\t\t\tfrom [t_DiskDrives] dd\n\t\t\twhere fis.file_location like (dd.disk_volume+'%')\n\t\t\torder by len(dd.disk_volume) desc\n\t\t) dv\n)\nselect\t[running_query] = max(running_query),\n\t\t--[collection_time_utc] = max(collection_time_utc),\n\t\t[sample_ms] = max(sample_ms),\n\t\t[database_count] = count(distinct database_name),\n\t\t[files_count] = count(*),\n\t\t[disk_volume] = max(dd.disk_volume), \n\t\t[capacity_mb] = max(dd.capacity_mb), \n\t\t[free_mb] = max(dd.free_mb),\n\t\t[db_files_size_on_disk_mb] = convert(numeric(20,2),sum(size_on_disk_bytes/1024.0/1024)),\n\t\t[total_reads_writes] = sum(total_reads_writes),\n\t\t[reads_mb] = convert(numeric(20,2),sum(num_of_bytes_read/1024.0/1024)),\n\t\t[writes_mb] = convert(numeric(20,2),sum(num_of_bytes_written/1024.0/1024)),\n\t\t[reads_writes_mb] = convert(numeric(20,2),sum( (num_of_bytes_read+num_of_bytes_written)/1024.0/1024 )),\n\t\t[pcnt_reads_writes] = convert(varchar,convert(numeric(20,2),(sum(num_of_bytes_read)*100.0/sum(num_of_bytes_read+num_of_bytes_written)))) \n\t\t\t\t\t\t\t\t+ ' / ' + \n\t\t\t\t\t\t\t\tconvert(varchar,convert(numeric(20,2),(sum(num_of_bytes_written)*100.0/sum(num_of_bytes_read+num_of_bytes_written))))\nfrom [t_FileIO] fio\nleft join [t_DiskDrives] dd on dd.disk_volume = fio.disk_volume\ngroup by dd.disk_volume\norder by [reads_writes_mb] desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
              "refId": "Query-Db-File-Stats-Since-Startup"
            }
          ],
          "title": "In Selected Time Duration",
          "transformations": [],
          "type": "table"
        }
      ],
      "title": "Disk IO Stats - Selective - \"__${sql_schedulers} CPUs__\" @ ${collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    }
  ],
  "refresh": "15m",
  "schemaVersion": 36,
  "style": "dark",
  "tags": [
    "mssql",
    "sqlserver"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "SqlMonitor",
          "value": "SqlMonitor"
        },
        "description": "Inventory Server Name",
        "hide": 2,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "mssql",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "selected": false,
          "text": "SqlPractice",
          "value": "SqlPractice"
        },
        "datasource": {
          "type": "mssql",
          "uid": "5Qr_lHw7z"
        },
        "definition": "declare @sql nvarchar(max);\n\nset quoted_identifier off;\nset @sql = \"select distinct srvname = sql_instance from dbo.instance_details with (nolock)\nwhere is_available = 1\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql;",
        "hide": 0,
        "includeAll": false,
        "label": "Sql Instance",
        "multi": false,
        "name": "server",
        "options": [],
        "query": "declare @sql nvarchar(max);\n\nset quoted_identifier off;\nset @sql = \"select distinct srvname = sql_instance from dbo.instance_details with (nolock)\nwhere is_available = 1\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "DBA",
          "value": "DBA"
        },
        "datasource": {
          "type": "mssql",
          "uid": "5Qr_lHw7z"
        },
        "definition": "SELECT DB_NAME()",
        "hide": 2,
        "includeAll": false,
        "label": "Inventory Database",
        "multi": false,
        "name": "inventory_db",
        "options": [],
        "query": "SELECT DB_NAME()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "0",
          "value": "0"
        },
        "datasource": {
          "type": "mssql",
          "uid": "5Qr_lHw7z"
        },
        "definition": "declare @sql_instance varchar(255); \nset @sql_instance = '$server';\nselect is_local = case when ( (CONVERT(varchar,SERVERPROPERTY('MachineName')) = @sql_instance ) \n\t\t\tor (CONVERT(varchar,SERVERPROPERTY('ServerName')) = @sql_instance )\n\t\t\t)  then 1 else 0 end",
        "hide": 2,
        "includeAll": false,
        "label": "Is Local SQL Instance",
        "multi": false,
        "name": "is_local",
        "options": [],
        "query": "declare @sql_instance varchar(255); \nset @sql_instance = '$server';\nselect is_local = case when ( (CONVERT(varchar,SERVERPROPERTY('MachineName')) = @sql_instance ) \n\t\t\tor (CONVERT(varchar,SERVERPROPERTY('ServerName')) = @sql_instance )\n\t\t\t)  then 1 else 0 end",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "DBA",
          "value": "DBA"
        },
        "datasource": {
          "type": "mssql",
          "uid": "5Qr_lHw7z"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @sql_instance varchar(255);\nset @sql_instance = '$server';\n\nset quoted_identifier off;\nset @sql = \"select [database] from dbo.instance_details id\nwhere id.sql_instance = @sql_instance\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql, N'@sql_instance varchar(255)', @sql_instance;",
        "hide": 2,
        "includeAll": false,
        "label": "DBA Database",
        "multi": false,
        "name": "dba_db",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @sql_instance varchar(255);\nset @sql_instance = '$server';\n\nset quoted_identifier off;\nset @sql = \"select [database] from dbo.instance_details id\nwhere id.sql_instance = @sql_instance\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql, N'@sql_instance varchar(255)', @sql_instance;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "192.168.29.22",
          "value": "192.168.29.22"
        },
        "datasource": {
          "type": "mssql",
          "uid": "5Qr_lHw7z"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n\nset @sql_instance = '$server';\nset @params = N'@sql_instance varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select CONVERT(varchar,  CONNECTIONPROPERTY('local_net_address') ) as [ip];\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql --, @params, @sql_instance;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql --, @params, @sql_instance;",
        "hide": 2,
        "includeAll": false,
        "label": "IP Address",
        "multi": false,
        "name": "ip",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n\nset @sql_instance = '$server';\nset @params = N'@sql_instance varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select CONVERT(varchar,  CONNECTIONPROPERTY('local_net_address') ) as [ip];\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql --, @params, @sql_instance;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql --, @params, @sql_instance;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "SqlPractice.Lab.com",
          "value": "SqlPractice.Lab.com"
        },
        "datasource": {
          "type": "mssql",
          "uid": "5Qr_lHw7z"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n\nset @sql_instance = '$server';\nset @params = N'@sql_instance varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"declare @fqdn nvarchar(100);\nexec usp_extended_results @fqdn = @fqdn output;\n\nselect case when default_domain() = 'WORKGROUP' then 'WORKGROUP' ELSE @fqdn END\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql --, @params, @sql_instance;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql --, @params, @sql_instance;",
        "hide": 2,
        "includeAll": false,
        "label": "FQDN",
        "multi": false,
        "name": "fqdn",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n\nset @sql_instance = '$server';\nset @params = N'@sql_instance varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"declare @fqdn nvarchar(100);\nexec usp_extended_results @fqdn = @fqdn output;\n\nselect case when default_domain() = 'WORKGROUP' then 'WORKGROUP' ELSE @fqdn END\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql --, @params, @sql_instance;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql --, @params, @sql_instance;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "1668433200637",
          "value": "1668433200637"
        },
        "datasource": {
          "type": "mssql",
          "uid": "5Qr_lHw7z"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n--declare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\nselect top 1 collection_time_utc\nfrom [dbo].[file_io_stats]\norder by collection_time_utc desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
        "hide": 2,
        "includeAll": false,
        "label": "Collection Time UTC",
        "multi": false,
        "name": "collection_time_utc",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n--declare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\nselect top 1 collection_time_utc\nfrom [dbo].[file_io_stats]\norder by collection_time_utc desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "4",
          "value": "4"
        },
        "datasource": {
          "type": "mssql",
          "uid": "5Qr_lHw7z"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @params = N'@perfmon_host_name varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select count(*) as counts from sys.dm_os_schedulers dos where status = 'VISIBLE ONLINE' and is_online = 1;\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name;",
        "hide": 2,
        "includeAll": false,
        "label": "SQL Schedulers",
        "multi": false,
        "name": "sql_schedulers",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @params = N'@perfmon_host_name varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select count(*) as counts from sys.dm_os_schedulers dos where status = 'VISIBLE ONLINE' and is_online = 1;\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "1668143138470",
          "value": "1668143138470"
        },
        "datasource": {
          "type": "mssql",
          "uid": "5Qr_lHw7z"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\n\nset @sql_instance = '$server';\nset @perfmon_host_name = '$perfmon_host_name';\nset @params = N'@perfmon_host_name varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), sqlserver_start_time) from sys.dm_os_sys_info as osi;\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name;",
        "hide": 2,
        "includeAll": false,
        "label": "SqlInstance Start Time UTC",
        "multi": false,
        "name": "sqlserver_start_time_utc",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\n\nset @sql_instance = '$server';\nset @perfmon_host_name = '$perfmon_host_name';\nset @params = N'@perfmon_host_name varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), sqlserver_start_time) from sys.dm_os_sys_info as osi;\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-2h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "t___Database File IO Stats",
  "uid": "database_file_io_stats",
  "version": 47,
  "weekStart": ""
}