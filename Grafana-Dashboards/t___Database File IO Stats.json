{
  "__inputs": [
    {
      "name": "DS_SQLMONITOR",
      "label": "SqlMonitor",
      "description": "",
      "type": "datasource",
      "pluginId": "mssql",
      "pluginName": "Microsoft SQL Server"
    }
  ],
  "__elements": [],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.0.2"
    },
    {
      "type": "datasource",
      "id": "mssql",
      "name": "Microsoft SQL Server",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Data of sys.dm_os_wait_stats",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1668057286759,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 12,
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "Since Startup__till____${collection_time_utc:date:YYYY-MM-DD HH.mm}_____ - \"__${sql_schedulers} CPUs__\"  - [$fqdn] - [$ip]",
      "type": "row"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLMONITOR}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "sample_ms"
            },
            "properties": [
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "displayName",
                "value": "Sample Time"
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "custom.minWidth",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "file_name_DISPLAY"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "File Name"
              },
              {
                "id": "custom.minWidth",
                "value": 200
              },
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "running_query"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "collection_time_utc"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "file_logical_name"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": false
              },
              {
                "id": "displayName",
                "value": "File Name"
              },
              {
                "id": "custom.minWidth",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "file_location"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "database_name"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Database"
              },
              {
                "id": "custom.minWidth",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "disk_volume"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Drive"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "size_on_disk_bytes"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decbytes"
              },
              {
                "id": "displayName",
                "value": "File Size"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "file_type"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": false
              },
              {
                "id": "displayName",
                "value": "File Type"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total_reads_writes"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "# Reads/Writes"
              },
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "num_of_bytes_read"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "num_of_bytes_written"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total_reads_writes_bytes"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Read/Written"
              },
              {
                "id": "unit",
                "value": "decbytes"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reads_pcnt"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "writes_pcnt"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "pcnt_reads_writes"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "% Read/Writes"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "read_latency_ms"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": false
              },
              {
                "id": "displayName",
                "value": "Avg Read Stall"
              },
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "write_latency_ms"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": false
              },
              {
                "id": "displayName",
                "value": "Avg Write Stall"
              },
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "latency_ms"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Avg Stall"
              },
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_bytes_per_read"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_bytes_per_write"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_bytes_per_transfer"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 10,
      "options": {
        "footer": {
          "enablePagination": true,
          "fields": [
            "sample_ms"
          ],
          "reducer": [
            "first"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "num_of_bytes_read"
          }
        ]
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLMONITOR}"
          },
          "format": "table",
          "hide": false,
          "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n--declare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"/* SQLMonitor - File IO Stats Since Startup */\nset nocount on;\ndeclare @start_time datetime;\ndeclare @schedulers smallint;\ndeclare @cpu_time_min decimal(18,1);\ndeclare @IOStatsTop tinyint = 10;\ndeclare @IOPercentTop int = 99;\n\nselect @start_time = sqlserver_start_time from sys.dm_os_sys_info;\nselect @schedulers = count(*) from sys.dm_os_schedulers where status = 'VISIBLE ONLINE' and is_online = 1;\n-- @cpu_time_min = sum(total_cpu_usage_ms/1000.0)/60.0\n\n;WITH [t_DiskDrives] AS (\n\tselect ds.disk_volume\n\tfrom dbo.disk_space ds\n\twhere ds.collection_time_utc = (select max(i.collection_time_utc) from dbo.disk_space i)\n)\n,[t_FileIO] AS\n\t(\tSELECT\n\t    [running_query] = 'File IO Stats', [collection_time_utc], [sample_ms], [database_name], \n\t    [file_name_DISPLAY] = [file_logical_name]+' '+QUOTENAME(case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end),\n\t    [file_logical_name], [file_location], dv.disk_volume, [size_on_disk_bytes],\n\t\t\t[file_type] = case when right(file_location,3) = 'ldf' then 'LOG' else 'DATA' end,\n\n\t\t\t[total_reads_writes] = [num_of_reads] + [num_of_writes], \n\t\t\t[num_of_bytes_read], [num_of_bytes_written], \n\t\t\t[total_reads_writes_bytes] = [num_of_bytes_read]+[num_of_bytes_written],\n\t\t\t\n\t\t\t[reads_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[writes_pcnt] = convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end),\n\t\t\t[pcnt_reads_writes] = convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_read]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)) + ' / ' + convert(varchar,convert(numeric(20,2),case when [num_of_bytes_read] = 0 and [num_of_bytes_written] = 0 then 0\n\t\t\t\t\t\t\t\telse 100.0 * ([num_of_bytes_written]*1.0)/([num_of_bytes_read]+[num_of_bytes_written]) end)),\n\n\t\t\t--[num_of_reads], [io_stall_read_ms], [num_of_writes],  [io_stall_write_ms],\n\t\t\t--[io_stall], [io_pending_ms_ticks_total],\n\t\t\t\n\t\t\t[read_latency_ms] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else (([io_stall_read_ms] * 1.0)/[num_of_reads]) end),\n\t\t\t[write_latency_ms] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else (([io_stall_write_ms] * 1.0)/[num_of_writes]) end),\n\t\t\t[latency_ms] = convert(numeric(20,2), case when [num_of_reads] + [num_of_writes] = 0 then 0 else (([io_stall] * 1.0) / ([num_of_reads] + [num_of_writes])) end),\n\n\t\t\t[avg_bytes_per_read] = convert(numeric(20,2), case when [num_of_reads] = 0 then 0 else ( ([num_of_bytes_read] * 1.0) / [num_of_reads] ) end),\n\t\t\t[avg_bytes_per_write] = convert(numeric(20,2), case when [num_of_writes] = 0 then 0 else ( ([num_of_bytes_written] * 1.0) / [num_of_writes] ) end),\n\t\t\t[avg_bytes_per_transfer] = convert(numeric(20,2), case when [num_of_reads] = 0 and [num_of_writes] = 0 then 0 else ( (([num_of_bytes_read]+[num_of_bytes_written]) * 1.0) / ([num_of_reads]+[num_of_writes]) ) end)\n\t\t\t\n\t\t\t/*\n\t\t\t[wait_time_ms] / 1000.0 AS [WaitS],\n\t\t\t\t[wait_time_ms],\n\t\t\t([wait_time_ms] - [signal_wait_time_ms]) / 1000.0 AS [ResourceS],\n\t\t\t[signal_wait_time_ms] / 1000.0 AS [SignalS],\n\t\t\t[waiting_tasks_count] AS [WaitCount],\n\t\t\t*/\n\n\t\t\t--100.0 * [wait_time_ms] / SUM ([wait_time_ms]) OVER() AS [Percentage],\n\t\t\t--ROW_NUMBER() OVER(ORDER BY [wait_time_ms] DESC) AS [RowNum]\n\t\tFROM dbo.file_io_stats fis\n\t\tOUTER APPLY (\n\t\t\t\tselect top 1 dd.disk_volume\n\t\t\t\tfrom [t_DiskDrives] dd\n\t\t\t\twhere fis.file_location like (dd.disk_volume+'%')\n\t\t\t\torder by len(dd.disk_volume) desc\n\t\t\t) dv\n\t\tWHERE fis.collection_time_utc = (SELECT MAX(i.collection_time_utc) FROM dbo.file_io_stats i)\n    )\nselect *\nfrom [t_FileIO] fio\norder by ([num_of_bytes_read]+[num_of_bytes_written]) desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
          "refId": "Query-Db-File-Stats-Since-Startup"
        }
      ],
      "title": "Db Files IO Stats - Since Startup  __ till ___${collection_time_utc:date:YYYY-MM-DD HH.mm}___",
      "transformations": [],
      "type": "table"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 20,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 18,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "9.0.2",
          "targets": [
            {
              "datasource": {
                "type": "datasource",
                "uid": "-- Dashboard --"
              },
              "panelId": 10,
              "refId": "A"
            }
          ],
          "title": "Panel Title",
          "type": "table"
        }
      ],
      "title": "Row title",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 16,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLMONITOR}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Wait_S"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  },
                  {
                    "id": "custom.width",
                    "value": 86
                  },
                  {
                    "id": "displayName",
                    "value": "Wait Time"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Duration (Sec)"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  },
                  {
                    "id": "custom.width",
                    "value": 100
                  },
                  {
                    "id": "displayName",
                    "value": "Time Sampled"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Percentage"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "custom.width",
                    "value": 90
                  },
                  {
                    "id": "displayName",
                    "value": "Pcnt"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Signal_S"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  },
                  {
                    "id": "custom.width",
                    "value": 125
                  },
                  {
                    "id": "displayName",
                    "value": "Signal Wait Time"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Waits(Sec) Per Core Per Minute"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  },
                  {
                    "id": "custom.width",
                    "value": 190
                  },
                  {
                    "id": "displayName",
                    "value": "Waits Per Core Per Minute"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "% Signal Waits"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "custom.width",
                    "value": 110
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Avg Time (ms) Per Wait"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "custom.width",
                    "value": 135
                  },
                  {
                    "id": "displayName",
                    "value": "Avg Time Per Wait"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "WaitType"
                },
                "properties": [
                  {
                    "id": "links",
                    "value": [
                      {
                        "targetBlank": true,
                        "title": "",
                        "url": "https://www.sqlskills.com/help/waits/${__value.raw}"
                      }
                    ]
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 300
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "WaitCount"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 130
                  },
                  {
                    "id": "displayName",
                    "value": "Number of Waits"
                  },
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Pcnt"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 66
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Resource_S"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "AvgRes_S"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "AvgWait_S"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "AvgSig_S"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 7,
            "w": 18,
            "x": 0,
            "y": 13
          },
          "id": 13,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.0.2",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "format": "table",
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\n--set @start_time_utc = $__timeFrom();\nset @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\n--set @end_time_utc = $__timeTo();\nset @end_time_utc = $__timeFrom();\n--select @start_time_utc as start_time, @end_time_utc as end_time;\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\ndeclare @schedulers smallint;\ndeclare @WaitStatsTop tinyint = 10;\ndeclare @WaitsPercentTop int = 99;\ndeclare @collect_time_utc_snap1 datetime2;\ndeclare @collect_time_utc_snap2 datetime2;\n\n--select @start_time_utc = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), sqlserver_start_time) from sys.dm_os_sys_info;\nselect @schedulers = count(*) from sys.dm_os_schedulers where status = 'VISIBLE ONLINE' and is_online = 1;\n\nselect top 1 @collect_time_utc_snap2 = collection_time_utc\nfrom dbo.wait_stats s2\nwhere s2.collection_time_utc <= @end_time_utc\norder by collection_time_utc desc;\n\nselect top 1 @collect_time_utc_snap1 = collection_time_utc\nfrom dbo.wait_stats s1\nwhere collection_time_utc >= @start_time_utc\norder by collection_time_utc asc;\n\n--select @collect_time_utc_snap1, @collect_time_utc_snap2;\n\nWITH [DiffWaits] AS\n(\tSELECT\n\t-- Waits that weren't in the first snapshot\n\t\t\t[ts2].[wait_type],\n\t\t\t[ts2].[wait_time_ms],\n\t\t\t[ts2].[signal_wait_time_ms],\n\t\t\t[ts2].[waiting_tasks_count]\n\t\tFROM dbo.wait_stats AS [ts2]\n\t\tLEFT OUTER JOIN dbo.wait_stats AS [ts1]\n\t\t\tON [ts2].[wait_type] = [ts1].[wait_type]\n\t\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\t\tWHERE [ts1].[wait_type] IS NULL\n\t\tAND [ts2].[wait_time_ms] > 0\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\tUNION\n\tSELECT\n\t-- Diff of waits in both snapshots\n\t\t\t[ts2].[wait_type],\n\t\t\t[ts2].[wait_time_ms] - [ts1].[wait_time_ms] AS [wait_time_ms],\n\t\t\t[ts2].[signal_wait_time_ms] - [ts1].[signal_wait_time_ms] AS [signal_wait_time_ms],\n\t\t\t[ts2].[waiting_tasks_count] - [ts1].[waiting_tasks_count] AS [waiting_tasks_count]\n\t\tFROM dbo.wait_stats AS [ts2]\n\t\tLEFT OUTER JOIN dbo.wait_stats AS [ts1]\n\t\t\tON [ts2].[wait_type] = [ts1].[wait_type]\n\t\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\t\tWHERE [ts1].[wait_type] IS NOT NULL\n\t\tAND [ts2].[waiting_tasks_count] - [ts1].[waiting_tasks_count] > 0\n\t\tAND [ts2].[wait_time_ms] - [ts1].[wait_time_ms] > 0\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n),\n[Waits] AS\n    (SELECT\n        [wait_type],\n        [wait_time_ms] / 1000.0 AS [WaitS],\n        [wait_time_ms],\n        ([wait_time_ms] - [signal_wait_time_ms]) / 1000.0 AS [ResourceS],\n        [signal_wait_time_ms] / 1000.0 AS [SignalS],\n        [waiting_tasks_count] AS [WaitCount],\n        100.0 * [wait_time_ms] / SUM ([wait_time_ms]) OVER() AS [Percentage],\n        ROW_NUMBER() OVER(ORDER BY [wait_time_ms] DESC) AS [RowNum]\n    FROM [DiffWaits]\n    WHERE [wait_type] NOT IN (\n        -- These wait types are almost 100% never a problem and so they are\n        -- filtered out to avoid them skewing the results. Click on the URL\n        -- for more information.\n        N'BROKER_EVENTHANDLER', -- https://www.sqlskills.com/help/waits/BROKER_EVENTHANDLER\n        N'BROKER_RECEIVE_WAITFOR', -- https://www.sqlskills.com/help/waits/BROKER_RECEIVE_WAITFOR\n        N'BROKER_TASK_STOP', -- https://www.sqlskills.com/help/waits/BROKER_TASK_STOP\n        N'BROKER_TO_FLUSH', -- https://www.sqlskills.com/help/waits/BROKER_TO_FLUSH\n        N'BROKER_TRANSMITTER', -- https://www.sqlskills.com/help/waits/BROKER_TRANSMITTER\n        N'CHECKPOINT_QUEUE', -- https://www.sqlskills.com/help/waits/CHECKPOINT_QUEUE\n        N'CHKPT', -- https://www.sqlskills.com/help/waits/CHKPT\n        N'CLR_AUTO_EVENT', -- https://www.sqlskills.com/help/waits/CLR_AUTO_EVENT\n        N'CLR_MANUAL_EVENT', -- https://www.sqlskills.com/help/waits/CLR_MANUAL_EVENT\n        N'CLR_SEMAPHORE', -- https://www.sqlskills.com/help/waits/CLR_SEMAPHORE\n        \n        --N'CXCONSUMER', -- https://www.sqlskills.com/help/waits/CXCONSUMER\n \n        -- Maybe comment these four out if you have mirroring issues\n        N'DBMIRROR_DBM_EVENT', -- https://www.sqlskills.com/help/waits/DBMIRROR_DBM_EVENT\n        N'DBMIRROR_EVENTS_QUEUE', -- https://www.sqlskills.com/help/waits/DBMIRROR_EVENTS_QUEUE\n        N'DBMIRROR_WORKER_QUEUE', -- https://www.sqlskills.com/help/waits/DBMIRROR_WORKER_QUEUE\n        N'DBMIRRORING_CMD', -- https://www.sqlskills.com/help/waits/DBMIRRORING_CMD\n \n        N'DIRTY_PAGE_POLL', -- https://www.sqlskills.com/help/waits/DIRTY_PAGE_POLL\n        N'DISPATCHER_QUEUE_SEMAPHORE', -- https://www.sqlskills.com/help/waits/DISPATCHER_QUEUE_SEMAPHORE\n        N'EXECSYNC', -- https://www.sqlskills.com/help/waits/EXECSYNC\n        N'FSAGENT', -- https://www.sqlskills.com/help/waits/FSAGENT\n        N'FT_IFTS_SCHEDULER_IDLE_WAIT', -- https://www.sqlskills.com/help/waits/FT_IFTS_SCHEDULER_IDLE_WAIT\n        N'FT_IFTSHC_MUTEX', -- https://www.sqlskills.com/help/waits/FT_IFTSHC_MUTEX\n \n        -- Maybe comment these six out if you have AG issues\n        /*\n        N'HADR_CLUSAPI_CALL', -- https://www.sqlskills.com/help/waits/HADR_CLUSAPI_CALL\n        N'HADR_FILESTREAM_IOMGR_IOCOMPLETION', -- https://www.sqlskills.com/help/waits/HADR_FILESTREAM_IOMGR_IOCOMPLETION\n        N'HADR_LOGCAPTURE_WAIT', -- https://www.sqlskills.com/help/waits/HADR_LOGCAPTURE_WAIT\n        N'HADR_NOTIFICATION_DEQUEUE', -- https://www.sqlskills.com/help/waits/HADR_NOTIFICATION_DEQUEUE\n        N'HADR_TIMER_TASK', -- https://www.sqlskills.com/help/waits/HADR_TIMER_TASK\n        N'HADR_WORK_QUEUE', -- https://www.sqlskills.com/help/waits/HADR_WORK_QUEUE\n        */\n        N'KSOURCE_WAKEUP', -- https://www.sqlskills.com/help/waits/KSOURCE_WAKEUP\n        N'LAZYWRITER_SLEEP', -- https://www.sqlskills.com/help/waits/LAZYWRITER_SLEEP\n        N'LOGMGR_QUEUE', -- https://www.sqlskills.com/help/waits/LOGMGR_QUEUE\n        N'MEMORY_ALLOCATION_EXT', -- https://www.sqlskills.com/help/waits/MEMORY_ALLOCATION_EXT\n        N'ONDEMAND_TASK_QUEUE', -- https://www.sqlskills.com/help/waits/ONDEMAND_TASK_QUEUE\n        N'PARALLEL_REDO_DRAIN_WORKER', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_DRAIN_WORKER\n        N'PARALLEL_REDO_LOG_CACHE', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_LOG_CACHE\n        N'PARALLEL_REDO_TRAN_LIST', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_TRAN_LIST\n        N'PARALLEL_REDO_WORKER_SYNC', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_WORKER_SYNC\n        N'PARALLEL_REDO_WORKER_WAIT_WORK', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_WORKER_WAIT_WORK\n        N'PREEMPTIVE_XE_GETTARGETSTATE', -- https://www.sqlskills.com/help/waits/PREEMPTIVE_XE_GETTARGETSTATE\n        N'PWAIT_ALL_COMPONENTS_INITIALIZED', -- https://www.sqlskills.com/help/waits/PWAIT_ALL_COMPONENTS_INITIALIZED\n        N'PWAIT_DIRECTLOGCONSUMER_GETNEXT', -- https://www.sqlskills.com/help/waits/PWAIT_DIRECTLOGCONSUMER_GETNEXT\n        N'QDS_PERSIST_TASK_MAIN_LOOP_SLEEP', -- https://www.sqlskills.com/help/waits/QDS_PERSIST_TASK_MAIN_LOOP_SLEEP\n        N'QDS_ASYNC_QUEUE', -- https://www.sqlskills.com/help/waits/QDS_ASYNC_QUEUE\n        N'QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP',\n            -- https://www.sqlskills.com/help/waits/QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP\n        N'QDS_SHUTDOWN_QUEUE', -- https://www.sqlskills.com/help/waits/QDS_SHUTDOWN_QUEUE\n        N'REDO_THREAD_PENDING_WORK', -- https://www.sqlskills.com/help/waits/REDO_THREAD_PENDING_WORK\n        N'REQUEST_FOR_DEADLOCK_SEARCH', -- https://www.sqlskills.com/help/waits/REQUEST_FOR_DEADLOCK_SEARCH\n        N'RESOURCE_QUEUE', -- https://www.sqlskills.com/help/waits/RESOURCE_QUEUE\n        N'SERVER_IDLE_CHECK', -- https://www.sqlskills.com/help/waits/SERVER_IDLE_CHECK\n        N'SLEEP_BPOOL_FLUSH', -- https://www.sqlskills.com/help/waits/SLEEP_BPOOL_FLUSH\n        N'SLEEP_DBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_DBSTARTUP\n        N'SLEEP_DCOMSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_DCOMSTARTUP\n        N'SLEEP_MASTERDBREADY', -- https://www.sqlskills.com/help/waits/SLEEP_MASTERDBREADY\n        N'SLEEP_MASTERMDREADY', -- https://www.sqlskills.com/help/waits/SLEEP_MASTERMDREADY\n        N'SLEEP_MASTERUPGRADED', -- https://www.sqlskills.com/help/waits/SLEEP_MASTERUPGRADED\n        N'SLEEP_MSDBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_MSDBSTARTUP\n        N'SLEEP_SYSTEMTASK', -- https://www.sqlskills.com/help/waits/SLEEP_SYSTEMTASK\n        N'SLEEP_TASK', -- https://www.sqlskills.com/help/waits/SLEEP_TASK\n        N'SLEEP_TEMPDBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_TEMPDBSTARTUP\n        N'SNI_HTTP_ACCEPT', -- https://www.sqlskills.com/help/waits/SNI_HTTP_ACCEPT\n        N'SOS_WORK_DISPATCHER', -- https://www.sqlskills.com/help/waits/SOS_WORK_DISPATCHER\n        N'SP_SERVER_DIAGNOSTICS_SLEEP', -- https://www.sqlskills.com/help/waits/SP_SERVER_DIAGNOSTICS_SLEEP\n        N'SQLTRACE_BUFFER_FLUSH', -- https://www.sqlskills.com/help/waits/SQLTRACE_BUFFER_FLUSH\n        N'SQLTRACE_INCREMENTAL_FLUSH_SLEEP', -- https://www.sqlskills.com/help/waits/SQLTRACE_INCREMENTAL_FLUSH_SLEEP\n        N'SQLTRACE_WAIT_ENTRIES', -- https://www.sqlskills.com/help/waits/SQLTRACE_WAIT_ENTRIES\n        N'WAIT_FOR_RESULTS', -- https://www.sqlskills.com/help/waits/WAIT_FOR_RESULTS\n        N'WAITFOR', -- https://www.sqlskills.com/help/waits/WAITFOR\n        N'WAITFOR_TASKSHUTDOWN', -- https://www.sqlskills.com/help/waits/WAITFOR_TASKSHUTDOWN\n        N'WAIT_XTP_RECOVERY', -- https://www.sqlskills.com/help/waits/WAIT_XTP_RECOVERY\n        N'WAIT_XTP_HOST_WAIT', -- https://www.sqlskills.com/help/waits/WAIT_XTP_HOST_WAIT\n        N'WAIT_XTP_OFFLINE_CKPT_NEW_LOG', -- https://www.sqlskills.com/help/waits/WAIT_XTP_OFFLINE_CKPT_NEW_LOG\n        N'WAIT_XTP_CKPT_CLOSE', -- https://www.sqlskills.com/help/waits/WAIT_XTP_CKPT_CLOSE\n        N'XE_DISPATCHER_JOIN', -- https://www.sqlskills.com/help/waits/XE_DISPATCHER_JOIN\n        N'XE_DISPATCHER_WAIT', -- https://www.sqlskills.com/help/waits/XE_DISPATCHER_WAIT\n        N'XE_TIMER_EVENT' -- https://www.sqlskills.com/help/waits/XE_TIMER_EVENT\n    )\n    )\nSELECT [Duration (Sec)] = datediff(second,@collect_time_utc_snap1,@collect_time_utc_snap2),\n        [W1].[wait_type] AS [WaitType],\n        CAST ([W1].[Percentage] AS DECIMAL (5, 2)) AS [Percentage],\n        CAST ([W1].[WaitS] AS DECIMAL (16, 2)) AS [Wait_S],\n\t      [Waits(Sec) Per Core Per Minute] = convert(numeric(20,2), [W1].[WaitS]*1.0 / @schedulers / datediff(minute,@collect_time_utc_snap1,@collect_time_utc_snap2)),\n    \n    --CAST ([W1].[ResourceS] AS DECIMAL (16, 2)) AS [Resource_S],\n    CAST ([W1].[SignalS] AS DECIMAL (16, 2)) AS [Signal_S],\n    CONVERT(DECIMAL(18,1), MAX([W1].[SignalS]) * 100.0 / MAX([W1].[WaitS]) ) AS [% Signal Waits],\n    [W1].[WaitCount] AS [WaitCount],\n    CONVERT(DECIMAL(18,1), MAX([W1].[wait_time_ms])*1.0 / MAX([W1].[WaitCount]) ) AS [Avg Time (ms) Per Wait]\n    --CAST (([W1].[WaitS] / [W1].[WaitCount]) AS DECIMAL (16, 4)) AS [AvgWait_S],\n    --CAST (([W1].[ResourceS] / [W1].[WaitCount]) AS DECIMAL (16, 4)) AS [AvgRes_S],\n    --CAST (([W1].[SignalS] / [W1].[WaitCount]) AS DECIMAL (16, 4)) AS [AvgSig_S]\n    --,CAST ('https://www.sqlskills.com/help/waits/' + MAX ([W1].[wait_type]) as XML) AS [Help/Info URL]\nFROM [Waits] AS [W1]\nINNER JOIN [Waits] AS [W2]\n    ON [W2].[RowNum] <= [W1].[RowNum]\nGROUP BY [W1].[RowNum], [W1].[wait_type], [W1].[WaitS],\n    [W1].[ResourceS], [W1].[SignalS], [W1].[WaitCount], [W1].[Percentage]\nHAVING (SUM([W2].[Percentage]) - [W1].[Percentage] < @WaitsPercentTop) -- percentage threshold\nAND ([W1].[RowNum] <= @WaitStatsTop)\nOPTION(RECOMPILE);\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc;",
              "refId": "A"
            }
          ],
          "title": "Since Startup Before Duration",
          "type": "table"
        },
        {
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLMONITOR}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Wait_S"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  },
                  {
                    "id": "custom.width",
                    "value": 86
                  },
                  {
                    "id": "displayName",
                    "value": "Wait Time"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Duration (Sec)"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  },
                  {
                    "id": "custom.width",
                    "value": 100
                  },
                  {
                    "id": "displayName",
                    "value": "Time Sampled"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Percentage"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "custom.width",
                    "value": 90
                  },
                  {
                    "id": "displayName",
                    "value": "Pcnt"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Signal_S"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  },
                  {
                    "id": "custom.width",
                    "value": 125
                  },
                  {
                    "id": "displayName",
                    "value": "Signal Wait Time"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Waits(Sec) Per Core Per Minute"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "s"
                  },
                  {
                    "id": "custom.width",
                    "value": 190
                  },
                  {
                    "id": "displayName",
                    "value": "Waits Per Core Per Minute"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "% Signal Waits"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "custom.width",
                    "value": 110
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Avg Time (ms) Per Wait"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  },
                  {
                    "id": "custom.width",
                    "value": 135
                  },
                  {
                    "id": "displayName",
                    "value": "Avg Time Per Wait"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "WaitType"
                },
                "properties": [
                  {
                    "id": "links",
                    "value": [
                      {
                        "targetBlank": true,
                        "title": "",
                        "url": "https://www.sqlskills.com/help/waits/${__value.raw}"
                      }
                    ]
                  },
                  {
                    "id": "custom.minWidth",
                    "value": 300
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "WaitCount"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 130
                  },
                  {
                    "id": "displayName",
                    "value": "Number of Waits"
                  },
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Pcnt"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 66
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 7,
            "w": 18,
            "x": 0,
            "y": 20
          },
          "id": 14,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.0.2",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "format": "table",
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\ndeclare @schedulers smallint;\ndeclare @WaitStatsTop tinyint = 10;\ndeclare @WaitsPercentTop int = 99;\ndeclare @collect_time_utc_snap1 datetime2;\ndeclare @collect_time_utc_snap2 datetime2;\n\n--select @start_time_utc = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), sqlserver_start_time) from sys.dm_os_sys_info;\nselect @schedulers = count(*) from sys.dm_os_schedulers where status = 'VISIBLE ONLINE' and is_online = 1;\n\nselect top 1 @collect_time_utc_snap2 = collection_time_utc\nfrom dbo.wait_stats s2\nwhere s2.collection_time_utc <= @end_time_utc\norder by collection_time_utc desc;\n\nselect top 1 @collect_time_utc_snap1 = collection_time_utc\nfrom dbo.wait_stats s1\nwhere collection_time_utc >= @start_time_utc\norder by collection_time_utc asc;\n\n--select @collect_time_utc_snap1, @collect_time_utc_snap2;\n\nWITH [DiffWaits] AS\n(\tSELECT\n\t-- Waits that weren't in the first snapshot\n\t\t\t[ts2].[wait_type],\n\t\t\t[ts2].[wait_time_ms],\n\t\t\t[ts2].[signal_wait_time_ms],\n\t\t\t[ts2].[waiting_tasks_count]\n\t\tFROM dbo.wait_stats AS [ts2]\n\t\tLEFT OUTER JOIN dbo.wait_stats AS [ts1]\n\t\t\tON [ts2].[wait_type] = [ts1].[wait_type]\n\t\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\t\tWHERE [ts1].[wait_type] IS NULL\n\t\tAND [ts2].[wait_time_ms] > 0\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\tUNION\n\tSELECT\n\t-- Diff of waits in both snapshots\n\t\t\t[ts2].[wait_type],\n\t\t\t[ts2].[wait_time_ms] - [ts1].[wait_time_ms] AS [wait_time_ms],\n\t\t\t[ts2].[signal_wait_time_ms] - [ts1].[signal_wait_time_ms] AS [signal_wait_time_ms],\n\t\t\t[ts2].[waiting_tasks_count] - [ts1].[waiting_tasks_count] AS [waiting_tasks_count]\n\t\tFROM dbo.wait_stats AS [ts2]\n\t\tLEFT OUTER JOIN dbo.wait_stats AS [ts1]\n\t\t\tON [ts2].[wait_type] = [ts1].[wait_type]\n\t\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n\t\t\tAND [ts1].collection_time_utc = @collect_time_utc_snap1\n\t\tWHERE [ts1].[wait_type] IS NOT NULL\n\t\tAND [ts2].[waiting_tasks_count] - [ts1].[waiting_tasks_count] > 0\n\t\tAND [ts2].[wait_time_ms] - [ts1].[wait_time_ms] > 0\n\t\tAND [ts2].collection_time_utc = @collect_time_utc_snap2\n),\n[Waits] AS\n    (SELECT\n        [wait_type],\n        [wait_time_ms] / 1000.0 AS [WaitS],\n        [wait_time_ms],\n        ([wait_time_ms] - [signal_wait_time_ms]) / 1000.0 AS [ResourceS],\n        [signal_wait_time_ms] / 1000.0 AS [SignalS],\n        [waiting_tasks_count] AS [WaitCount],\n        100.0 * [wait_time_ms] / SUM ([wait_time_ms]) OVER() AS [Percentage],\n        ROW_NUMBER() OVER(ORDER BY [wait_time_ms] DESC) AS [RowNum]\n    FROM [DiffWaits]\n    WHERE [wait_type] NOT IN (\n        -- These wait types are almost 100% never a problem and so they are\n        -- filtered out to avoid them skewing the results. Click on the URL\n        -- for more information.\n        N'BROKER_EVENTHANDLER', -- https://www.sqlskills.com/help/waits/BROKER_EVENTHANDLER\n        N'BROKER_RECEIVE_WAITFOR', -- https://www.sqlskills.com/help/waits/BROKER_RECEIVE_WAITFOR\n        N'BROKER_TASK_STOP', -- https://www.sqlskills.com/help/waits/BROKER_TASK_STOP\n        N'BROKER_TO_FLUSH', -- https://www.sqlskills.com/help/waits/BROKER_TO_FLUSH\n        N'BROKER_TRANSMITTER', -- https://www.sqlskills.com/help/waits/BROKER_TRANSMITTER\n        N'CHECKPOINT_QUEUE', -- https://www.sqlskills.com/help/waits/CHECKPOINT_QUEUE\n        N'CHKPT', -- https://www.sqlskills.com/help/waits/CHKPT\n        N'CLR_AUTO_EVENT', -- https://www.sqlskills.com/help/waits/CLR_AUTO_EVENT\n        N'CLR_MANUAL_EVENT', -- https://www.sqlskills.com/help/waits/CLR_MANUAL_EVENT\n        N'CLR_SEMAPHORE', -- https://www.sqlskills.com/help/waits/CLR_SEMAPHORE\n        \n        --N'CXCONSUMER', -- https://www.sqlskills.com/help/waits/CXCONSUMER\n \n        -- Maybe comment these four out if you have mirroring issues\n        N'DBMIRROR_DBM_EVENT', -- https://www.sqlskills.com/help/waits/DBMIRROR_DBM_EVENT\n        N'DBMIRROR_EVENTS_QUEUE', -- https://www.sqlskills.com/help/waits/DBMIRROR_EVENTS_QUEUE\n        N'DBMIRROR_WORKER_QUEUE', -- https://www.sqlskills.com/help/waits/DBMIRROR_WORKER_QUEUE\n        N'DBMIRRORING_CMD', -- https://www.sqlskills.com/help/waits/DBMIRRORING_CMD\n \n        N'DIRTY_PAGE_POLL', -- https://www.sqlskills.com/help/waits/DIRTY_PAGE_POLL\n        N'DISPATCHER_QUEUE_SEMAPHORE', -- https://www.sqlskills.com/help/waits/DISPATCHER_QUEUE_SEMAPHORE\n        N'EXECSYNC', -- https://www.sqlskills.com/help/waits/EXECSYNC\n        N'FSAGENT', -- https://www.sqlskills.com/help/waits/FSAGENT\n        N'FT_IFTS_SCHEDULER_IDLE_WAIT', -- https://www.sqlskills.com/help/waits/FT_IFTS_SCHEDULER_IDLE_WAIT\n        N'FT_IFTSHC_MUTEX', -- https://www.sqlskills.com/help/waits/FT_IFTSHC_MUTEX\n \n        -- Maybe comment these six out if you have AG issues\n        /*\n        N'HADR_CLUSAPI_CALL', -- https://www.sqlskills.com/help/waits/HADR_CLUSAPI_CALL\n        N'HADR_FILESTREAM_IOMGR_IOCOMPLETION', -- https://www.sqlskills.com/help/waits/HADR_FILESTREAM_IOMGR_IOCOMPLETION\n        N'HADR_LOGCAPTURE_WAIT', -- https://www.sqlskills.com/help/waits/HADR_LOGCAPTURE_WAIT\n        N'HADR_NOTIFICATION_DEQUEUE', -- https://www.sqlskills.com/help/waits/HADR_NOTIFICATION_DEQUEUE\n        N'HADR_TIMER_TASK', -- https://www.sqlskills.com/help/waits/HADR_TIMER_TASK\n        N'HADR_WORK_QUEUE', -- https://www.sqlskills.com/help/waits/HADR_WORK_QUEUE\n        */\n \n        N'KSOURCE_WAKEUP', -- https://www.sqlskills.com/help/waits/KSOURCE_WAKEUP\n        N'LAZYWRITER_SLEEP', -- https://www.sqlskills.com/help/waits/LAZYWRITER_SLEEP\n        N'LOGMGR_QUEUE', -- https://www.sqlskills.com/help/waits/LOGMGR_QUEUE\n        N'MEMORY_ALLOCATION_EXT', -- https://www.sqlskills.com/help/waits/MEMORY_ALLOCATION_EXT\n        N'ONDEMAND_TASK_QUEUE', -- https://www.sqlskills.com/help/waits/ONDEMAND_TASK_QUEUE\n        N'PARALLEL_REDO_DRAIN_WORKER', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_DRAIN_WORKER\n        N'PARALLEL_REDO_LOG_CACHE', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_LOG_CACHE\n        N'PARALLEL_REDO_TRAN_LIST', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_TRAN_LIST\n        N'PARALLEL_REDO_WORKER_SYNC', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_WORKER_SYNC\n        N'PARALLEL_REDO_WORKER_WAIT_WORK', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_WORKER_WAIT_WORK\n        N'PREEMPTIVE_XE_GETTARGETSTATE', -- https://www.sqlskills.com/help/waits/PREEMPTIVE_XE_GETTARGETSTATE\n        N'PWAIT_ALL_COMPONENTS_INITIALIZED', -- https://www.sqlskills.com/help/waits/PWAIT_ALL_COMPONENTS_INITIALIZED\n        N'PWAIT_DIRECTLOGCONSUMER_GETNEXT', -- https://www.sqlskills.com/help/waits/PWAIT_DIRECTLOGCONSUMER_GETNEXT\n        N'QDS_PERSIST_TASK_MAIN_LOOP_SLEEP', -- https://www.sqlskills.com/help/waits/QDS_PERSIST_TASK_MAIN_LOOP_SLEEP\n        N'QDS_ASYNC_QUEUE', -- https://www.sqlskills.com/help/waits/QDS_ASYNC_QUEUE\n        N'QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP',\n            -- https://www.sqlskills.com/help/waits/QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP\n        N'QDS_SHUTDOWN_QUEUE', -- https://www.sqlskills.com/help/waits/QDS_SHUTDOWN_QUEUE\n        N'REDO_THREAD_PENDING_WORK', -- https://www.sqlskills.com/help/waits/REDO_THREAD_PENDING_WORK\n        N'REQUEST_FOR_DEADLOCK_SEARCH', -- https://www.sqlskills.com/help/waits/REQUEST_FOR_DEADLOCK_SEARCH\n        N'RESOURCE_QUEUE', -- https://www.sqlskills.com/help/waits/RESOURCE_QUEUE\n        N'SERVER_IDLE_CHECK', -- https://www.sqlskills.com/help/waits/SERVER_IDLE_CHECK\n        N'SLEEP_BPOOL_FLUSH', -- https://www.sqlskills.com/help/waits/SLEEP_BPOOL_FLUSH\n        N'SLEEP_DBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_DBSTARTUP\n        N'SLEEP_DCOMSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_DCOMSTARTUP\n        N'SLEEP_MASTERDBREADY', -- https://www.sqlskills.com/help/waits/SLEEP_MASTERDBREADY\n        N'SLEEP_MASTERMDREADY', -- https://www.sqlskills.com/help/waits/SLEEP_MASTERMDREADY\n        N'SLEEP_MASTERUPGRADED', -- https://www.sqlskills.com/help/waits/SLEEP_MASTERUPGRADED\n        N'SLEEP_MSDBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_MSDBSTARTUP\n        N'SLEEP_SYSTEMTASK', -- https://www.sqlskills.com/help/waits/SLEEP_SYSTEMTASK\n        N'SLEEP_TASK', -- https://www.sqlskills.com/help/waits/SLEEP_TASK\n        N'SLEEP_TEMPDBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_TEMPDBSTARTUP\n        N'SNI_HTTP_ACCEPT', -- https://www.sqlskills.com/help/waits/SNI_HTTP_ACCEPT\n        N'SOS_WORK_DISPATCHER', -- https://www.sqlskills.com/help/waits/SOS_WORK_DISPATCHER\n        N'SP_SERVER_DIAGNOSTICS_SLEEP', -- https://www.sqlskills.com/help/waits/SP_SERVER_DIAGNOSTICS_SLEEP\n        N'SQLTRACE_BUFFER_FLUSH', -- https://www.sqlskills.com/help/waits/SQLTRACE_BUFFER_FLUSH\n        N'SQLTRACE_INCREMENTAL_FLUSH_SLEEP', -- https://www.sqlskills.com/help/waits/SQLTRACE_INCREMENTAL_FLUSH_SLEEP\n        N'SQLTRACE_WAIT_ENTRIES', -- https://www.sqlskills.com/help/waits/SQLTRACE_WAIT_ENTRIES\n        N'WAIT_FOR_RESULTS', -- https://www.sqlskills.com/help/waits/WAIT_FOR_RESULTS\n        N'WAITFOR', -- https://www.sqlskills.com/help/waits/WAITFOR\n        N'WAITFOR_TASKSHUTDOWN', -- https://www.sqlskills.com/help/waits/WAITFOR_TASKSHUTDOWN\n        N'WAIT_XTP_RECOVERY', -- https://www.sqlskills.com/help/waits/WAIT_XTP_RECOVERY\n        N'WAIT_XTP_HOST_WAIT', -- https://www.sqlskills.com/help/waits/WAIT_XTP_HOST_WAIT\n        N'WAIT_XTP_OFFLINE_CKPT_NEW_LOG', -- https://www.sqlskills.com/help/waits/WAIT_XTP_OFFLINE_CKPT_NEW_LOG\n        N'WAIT_XTP_CKPT_CLOSE', -- https://www.sqlskills.com/help/waits/WAIT_XTP_CKPT_CLOSE\n        N'XE_DISPATCHER_JOIN', -- https://www.sqlskills.com/help/waits/XE_DISPATCHER_JOIN\n        N'XE_DISPATCHER_WAIT', -- https://www.sqlskills.com/help/waits/XE_DISPATCHER_WAIT\n        N'XE_TIMER_EVENT' -- https://www.sqlskills.com/help/waits/XE_TIMER_EVENT\n    )\n    )\nSELECT [Duration (Sec)] = datediff(second,@collect_time_utc_snap1,@collect_time_utc_snap2),\n        [W1].[wait_type] AS [WaitType],\n        CAST ([W1].[Percentage] AS DECIMAL (5, 2)) AS [Percentage],\n        CAST ([W1].[WaitS] AS DECIMAL (16, 2)) AS [Wait_S],\n\t      [Waits(Sec) Per Core Per Minute] = convert(numeric(20,2), [W1].[WaitS]*1.0 / @schedulers / datediff(minute,@collect_time_utc_snap1,@collect_time_utc_snap2)),\n    \n    --CAST ([W1].[ResourceS] AS DECIMAL (16, 2)) AS [Resource_S],\n    CAST ([W1].[SignalS] AS DECIMAL (16, 2)) AS [Signal_S],\n    CONVERT(DECIMAL(18,1), MAX([W1].[SignalS]) * 100.0 / MAX([W1].[WaitS]) ) AS [% Signal Waits],\n    [W1].[WaitCount] AS [WaitCount],\n    CONVERT(DECIMAL(18,1), MAX([W1].[wait_time_ms])*1.0 / MAX([W1].[WaitCount]) ) AS [Avg Time (ms) Per Wait]\n    --CAST (([W1].[WaitS] / [W1].[WaitCount]) AS DECIMAL (16, 4)) AS [AvgWait_S],\n    --CAST (([W1].[ResourceS] / [W1].[WaitCount]) AS DECIMAL (16, 4)) AS [AvgRes_S],\n    --CAST (([W1].[SignalS] / [W1].[WaitCount]) AS DECIMAL (16, 4)) AS [AvgSig_S]\n    --,CAST ('https://www.sqlskills.com/help/waits/' + MAX ([W1].[wait_type]) as XML) AS [Help/Info URL]\nFROM [Waits] AS [W1]\nINNER JOIN [Waits] AS [W2]\n    ON [W2].[RowNum] <= [W1].[RowNum]\nGROUP BY [W1].[RowNum], [W1].[wait_type], [W1].[WaitS],\n    [W1].[ResourceS], [W1].[SignalS], [W1].[WaitCount], [W1].[Percentage]\nHAVING (SUM([W2].[Percentage]) - [W1].[Percentage] < @WaitsPercentTop) -- percentage threshold\nAND ([W1].[RowNum] <= @WaitStatsTop)\nOPTION(RECOMPILE);\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc;",
              "refId": "A"
            }
          ],
          "title": "In Selected Time Duration",
          "type": "table"
        }
      ],
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "Selective - WaitStats - \"__${sql_schedulers} CPUs__\" @ ${collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 4,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLMONITOR}"
          },
          "description": "select * from dbo.BlitzFirst_WaitStats_Deltas\nhttps://www.sqlskills.com/blogs/paul/wait-statistics-or-please-tell-me-where-it-hurts/",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "Wait Stats (ms)",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "hue",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 1,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 19,
            "w": 24,
            "x": 0,
            "y": 14
          },
          "id": 2,
          "options": {
            "legend": {
              "calcs": [
                "sum",
                "last"
              ],
              "displayMode": "table",
              "placement": "right",
              "sortBy": "Total",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "format": "time_series",
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\ndeclare @WaitStatsTop tinyint = 10;\ndeclare @WaitsPercentTop int = 99;\n\n;WITH [Waits] AS\n(\n\tSELECT\t[collection_time_utc], \n\t\t\t[wait_type], \n\t\t\t[WaitCategory], \n\t\t\t[Ignorable], \n\t\t\t[ElapsedSeconds], \n\t\t\t[wait_time_ms_delta], \n\t\t\t[wait_time_minutes_delta], \n\t\t\t[wait_time_minutes_per_minute], \n\t\t\t([wait_time_ms_delta] - [signal_wait_time_ms_delta]) as [resource_wait_time_ms_delta],\n\t\t\t[signal_wait_time_ms_delta], \n\t\t\t[waiting_tasks_count_delta],\n\t\t\tROW_NUMBER() OVER(PARTITION BY [collection_time_utc] ORDER BY [wait_time_ms_delta] DESC) AS [WaitsRank],\n\t\t\t(100.0 * [wait_time_ms_delta]) / (SUM ([wait_time_ms_delta]) OVER (PARTITION BY [collection_time_utc])) AS [Percentage]\n\t\t\t,(100.0 * (SUM([wait_time_ms_delta]) OVER(PARTITION BY [collection_time_utc] ORDER BY [wait_time_ms_delta] DESC, [waiting_tasks_count_delta] DESC, [wait_type]))) / (SUM ([wait_time_ms_delta]) OVER (PARTITION BY [collection_time_utc])) AS [PercentageTotal]\n\tFROM dbo.[vw_wait_stats_deltas] AS [Waits]\n\tWHERE collection_time_utc between @start_time_utc and @end_time_utc\n\tAND [wait_type] NOT IN (\n        -- These wait types are almost 100% never a problem and so they are\n        -- filtered out to avoid them skewing the results. Click on the URL\n        -- for more information.\n        N'BROKER_EVENTHANDLER', -- https://www.sqlskills.com/help/waits/BROKER_EVENTHANDLER\n        N'BROKER_RECEIVE_WAITFOR', -- https://www.sqlskills.com/help/waits/BROKER_RECEIVE_WAITFOR\n        N'BROKER_TASK_STOP', -- https://www.sqlskills.com/help/waits/BROKER_TASK_STOP\n        N'BROKER_TO_FLUSH', -- https://www.sqlskills.com/help/waits/BROKER_TO_FLUSH\n        N'BROKER_TRANSMITTER', -- https://www.sqlskills.com/help/waits/BROKER_TRANSMITTER\n        N'CHECKPOINT_QUEUE', -- https://www.sqlskills.com/help/waits/CHECKPOINT_QUEUE\n        N'CHKPT', -- https://www.sqlskills.com/help/waits/CHKPT\n        N'CLR_AUTO_EVENT', -- https://www.sqlskills.com/help/waits/CLR_AUTO_EVENT\n        N'CLR_MANUAL_EVENT', -- https://www.sqlskills.com/help/waits/CLR_MANUAL_EVENT\n        N'CLR_SEMAPHORE', -- https://www.sqlskills.com/help/waits/CLR_SEMAPHORE\n        \n        --N'CXCONSUMER', -- https://www.sqlskills.com/help/waits/CXCONSUMER\n \n        -- Maybe comment these four out if you have mirroring issues\n        /*\n        N'DBMIRROR_DBM_EVENT', -- https://www.sqlskills.com/help/waits/DBMIRROR_DBM_EVENT\n        N'DBMIRROR_EVENTS_QUEUE', -- https://www.sqlskills.com/help/waits/DBMIRROR_EVENTS_QUEUE\n        N'DBMIRROR_WORKER_QUEUE', -- https://www.sqlskills.com/help/waits/DBMIRROR_WORKER_QUEUE\n        N'DBMIRRORING_CMD', -- https://www.sqlskills.com/help/waits/DBMIRRORING_CMD\n        */\n        \n        N'DIRTY_PAGE_POLL', -- https://www.sqlskills.com/help/waits/DIRTY_PAGE_POLL\n        N'DISPATCHER_QUEUE_SEMAPHORE', -- https://www.sqlskills.com/help/waits/DISPATCHER_QUEUE_SEMAPHORE\n        N'EXECSYNC', -- https://www.sqlskills.com/help/waits/EXECSYNC\n        N'FSAGENT', -- https://www.sqlskills.com/help/waits/FSAGENT\n        N'FT_IFTS_SCHEDULER_IDLE_WAIT', -- https://www.sqlskills.com/help/waits/FT_IFTS_SCHEDULER_IDLE_WAIT\n        N'FT_IFTSHC_MUTEX', -- https://www.sqlskills.com/help/waits/FT_IFTSHC_MUTEX\n \n        -- Maybe comment these six out if you have AG issues\n        N'HADR_CLUSAPI_CALL', -- https://www.sqlskills.com/help/waits/HADR_CLUSAPI_CALL\n        N'HADR_FILESTREAM_IOMGR_IOCOMPLETION', -- https://www.sqlskills.com/help/waits/HADR_FILESTREAM_IOMGR_IOCOMPLETION\n        N'HADR_LOGCAPTURE_WAIT', -- https://www.sqlskills.com/help/waits/HADR_LOGCAPTURE_WAIT\n        N'HADR_NOTIFICATION_DEQUEUE', -- https://www.sqlskills.com/help/waits/HADR_NOTIFICATION_DEQUEUE\n        N'HADR_TIMER_TASK', -- https://www.sqlskills.com/help/waits/HADR_TIMER_TASK\n        N'HADR_WORK_QUEUE', -- https://www.sqlskills.com/help/waits/HADR_WORK_QUEUE\n \n        N'KSOURCE_WAKEUP', -- https://www.sqlskills.com/help/waits/KSOURCE_WAKEUP\n        N'LAZYWRITER_SLEEP', -- https://www.sqlskills.com/help/waits/LAZYWRITER_SLEEP\n        N'LOGMGR_QUEUE', -- https://www.sqlskills.com/help/waits/LOGMGR_QUEUE\n        N'MEMORY_ALLOCATION_EXT', -- https://www.sqlskills.com/help/waits/MEMORY_ALLOCATION_EXT\n        N'ONDEMAND_TASK_QUEUE', -- https://www.sqlskills.com/help/waits/ONDEMAND_TASK_QUEUE\n        N'PARALLEL_REDO_DRAIN_WORKER', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_DRAIN_WORKER\n        N'PARALLEL_REDO_LOG_CACHE', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_LOG_CACHE\n        N'PARALLEL_REDO_TRAN_LIST', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_TRAN_LIST\n        N'PARALLEL_REDO_WORKER_SYNC', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_WORKER_SYNC\n        N'PARALLEL_REDO_WORKER_WAIT_WORK', -- https://www.sqlskills.com/help/waits/PARALLEL_REDO_WORKER_WAIT_WORK\n        N'PREEMPTIVE_XE_GETTARGETSTATE', -- https://www.sqlskills.com/help/waits/PREEMPTIVE_XE_GETTARGETSTATE\n        N'PWAIT_ALL_COMPONENTS_INITIALIZED', -- https://www.sqlskills.com/help/waits/PWAIT_ALL_COMPONENTS_INITIALIZED\n        N'PWAIT_DIRECTLOGCONSUMER_GETNEXT', -- https://www.sqlskills.com/help/waits/PWAIT_DIRECTLOGCONSUMER_GETNEXT\n        N'QDS_PERSIST_TASK_MAIN_LOOP_SLEEP', -- https://www.sqlskills.com/help/waits/QDS_PERSIST_TASK_MAIN_LOOP_SLEEP\n        N'QDS_ASYNC_QUEUE', -- https://www.sqlskills.com/help/waits/QDS_ASYNC_QUEUE\n        N'QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP',\n            -- https://www.sqlskills.com/help/waits/QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP\n        N'QDS_SHUTDOWN_QUEUE', -- https://www.sqlskills.com/help/waits/QDS_SHUTDOWN_QUEUE\n        N'REDO_THREAD_PENDING_WORK', -- https://www.sqlskills.com/help/waits/REDO_THREAD_PENDING_WORK\n        N'REQUEST_FOR_DEADLOCK_SEARCH', -- https://www.sqlskills.com/help/waits/REQUEST_FOR_DEADLOCK_SEARCH\n        N'RESOURCE_QUEUE', -- https://www.sqlskills.com/help/waits/RESOURCE_QUEUE\n        N'SERVER_IDLE_CHECK', -- https://www.sqlskills.com/help/waits/SERVER_IDLE_CHECK\n        N'SLEEP_BPOOL_FLUSH', -- https://www.sqlskills.com/help/waits/SLEEP_BPOOL_FLUSH\n        N'SLEEP_DBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_DBSTARTUP\n        N'SLEEP_DCOMSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_DCOMSTARTUP\n        N'SLEEP_MASTERDBREADY', -- https://www.sqlskills.com/help/waits/SLEEP_MASTERDBREADY\n        N'SLEEP_MASTERMDREADY', -- https://www.sqlskills.com/help/waits/SLEEP_MASTERMDREADY\n        N'SLEEP_MASTERUPGRADED', -- https://www.sqlskills.com/help/waits/SLEEP_MASTERUPGRADED\n        N'SLEEP_MSDBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_MSDBSTARTUP\n        N'SLEEP_SYSTEMTASK', -- https://www.sqlskills.com/help/waits/SLEEP_SYSTEMTASK\n        N'SLEEP_TASK', -- https://www.sqlskills.com/help/waits/SLEEP_TASK\n        N'SLEEP_TEMPDBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_TEMPDBSTARTUP\n        N'SNI_HTTP_ACCEPT', -- https://www.sqlskills.com/help/waits/SNI_HTTP_ACCEPT\n        N'SOS_WORK_DISPATCHER', -- https://www.sqlskills.com/help/waits/SOS_WORK_DISPATCHER\n        N'SP_SERVER_DIAGNOSTICS_SLEEP', -- https://www.sqlskills.com/help/waits/SP_SERVER_DIAGNOSTICS_SLEEP\n        N'SQLTRACE_BUFFER_FLUSH', -- https://www.sqlskills.com/help/waits/SQLTRACE_BUFFER_FLUSH\n        N'SQLTRACE_INCREMENTAL_FLUSH_SLEEP', -- https://www.sqlskills.com/help/waits/SQLTRACE_INCREMENTAL_FLUSH_SLEEP\n        N'SQLTRACE_WAIT_ENTRIES', -- https://www.sqlskills.com/help/waits/SQLTRACE_WAIT_ENTRIES\n        N'WAIT_FOR_RESULTS', -- https://www.sqlskills.com/help/waits/WAIT_FOR_RESULTS\n        N'WAITFOR', -- https://www.sqlskills.com/help/waits/WAITFOR\n        N'WAITFOR_TASKSHUTDOWN', -- https://www.sqlskills.com/help/waits/WAITFOR_TASKSHUTDOWN\n        N'WAIT_XTP_RECOVERY', -- https://www.sqlskills.com/help/waits/WAIT_XTP_RECOVERY\n        N'WAIT_XTP_HOST_WAIT', -- https://www.sqlskills.com/help/waits/WAIT_XTP_HOST_WAIT\n        N'WAIT_XTP_OFFLINE_CKPT_NEW_LOG', -- https://www.sqlskills.com/help/waits/WAIT_XTP_OFFLINE_CKPT_NEW_LOG\n        N'WAIT_XTP_CKPT_CLOSE', -- https://www.sqlskills.com/help/waits/WAIT_XTP_CKPT_CLOSE\n        N'XE_DISPATCHER_JOIN', -- https://www.sqlskills.com/help/waits/XE_DISPATCHER_JOIN\n        N'XE_DISPATCHER_WAIT', -- https://www.sqlskills.com/help/waits/XE_DISPATCHER_WAIT\n        N'XE_TIMER_EVENT' -- https://www.sqlskills.com/help/waits/XE_TIMER_EVENT\n    )\n)\nSELECT\ttime = [collection_time_utc]\n\t\t,[metric] =  [WaitCategory]+ ' (__ '+[wait_type]+' __)'\n\t\t--,[WaitCategory]\n\t\t--,[WaitsRank]\n\t\t--,[Percentage]\n\t\t--,[Ignorable]\n\t\t--,[ElapsedSeconds]\n\t\t,[value] = [wait_time_ms_delta]\n\t\t--,[wait_time_minutes_delta]\n\t\t--,[wait_time_minutes_per_minute]\n\t\t--,[signal_wait_time_ms_delta]\n\t\t--,[waiting_tasks_count_delta]\n\t\t--,ISNULL((CAST([wait_time_ms_delta] AS DECIMAL(38,2))/NULLIF(CAST([waiting_tasks_count_delta] AS DECIMAL(38,2)),0)),0) AS [wait_time_ms_per_wait]\n\t\t--,[PercentageTotal]\nFROM [Waits] as cur\nWHERE [WaitsRank] <= @WaitStatsTop\nAND [PercentageTotal] <= @WaitsPercentTop\nORDER BY [time] ASC, [wait_time_ms_delta] DESC, [waiting_tasks_count_delta] DESC\nOPTION(RECOMPILE);\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc;",
              "refId": "A"
            }
          ],
          "title": "[${server}] - WaitStats",
          "type": "timeseries"
        }
      ],
      "repeat": "datasource",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "WaitStats - Histogram -  [$fqdn] - [$ip] - @ ${collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    }
  ],
  "refresh": "5m",
  "schemaVersion": 36,
  "style": "dark",
  "tags": [
    "mssql",
    "sqlserver"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "SqlMonitor",
          "value": "SqlMonitor"
        },
        "description": "Inventory Server Name",
        "hide": 2,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "mssql",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "declare @sql nvarchar(max);\n\nset quoted_identifier off;\nset @sql = \"select distinct srvname = sql_instance from dbo.instance_details with (nolock)\nwhere is_available = 1\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql;",
        "hide": 0,
        "includeAll": false,
        "label": "Sql Instance",
        "multi": false,
        "name": "server",
        "options": [],
        "query": "declare @sql nvarchar(max);\n\nset quoted_identifier off;\nset @sql = \"select distinct srvname = sql_instance from dbo.instance_details with (nolock)\nwhere is_available = 1\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "SELECT DB_NAME()",
        "hide": 2,
        "includeAll": false,
        "label": "Inventory Database",
        "multi": false,
        "name": "inventory_db",
        "options": [],
        "query": "SELECT DB_NAME()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "declare @sql_instance varchar(255); \nset @sql_instance = '$server';\nselect is_local = case when ( (CONVERT(varchar,SERVERPROPERTY('MachineName')) = @sql_instance ) \n\t\t\tor (CONVERT(varchar,SERVERPROPERTY('ServerName')) = @sql_instance )\n\t\t\t)  then 1 else 0 end",
        "hide": 2,
        "includeAll": false,
        "label": "Is Local SQL Instance",
        "multi": false,
        "name": "is_local",
        "options": [],
        "query": "declare @sql_instance varchar(255); \nset @sql_instance = '$server';\nselect is_local = case when ( (CONVERT(varchar,SERVERPROPERTY('MachineName')) = @sql_instance ) \n\t\t\tor (CONVERT(varchar,SERVERPROPERTY('ServerName')) = @sql_instance )\n\t\t\t)  then 1 else 0 end",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @sql_instance varchar(255);\nset @sql_instance = '$server';\n\nset quoted_identifier off;\nset @sql = \"select [database] from dbo.instance_details id\nwhere id.sql_instance = @sql_instance\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql, N'@sql_instance varchar(255)', @sql_instance;",
        "hide": 2,
        "includeAll": false,
        "label": "DBA Database",
        "multi": false,
        "name": "dba_db",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @sql_instance varchar(255);\nset @sql_instance = '$server';\n\nset quoted_identifier off;\nset @sql = \"select [database] from dbo.instance_details id\nwhere id.sql_instance = @sql_instance\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql, N'@sql_instance varchar(255)', @sql_instance;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n\nset @sql_instance = '$server';\nset @params = N'@sql_instance varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select CONVERT(varchar,  CONNECTIONPROPERTY('local_net_address') ) as [ip];\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql --, @params, @sql_instance;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql --, @params, @sql_instance;",
        "hide": 2,
        "includeAll": false,
        "label": "IP Address",
        "multi": false,
        "name": "ip",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n\nset @sql_instance = '$server';\nset @params = N'@sql_instance varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select CONVERT(varchar,  CONNECTIONPROPERTY('local_net_address') ) as [ip];\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql --, @params, @sql_instance;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql --, @params, @sql_instance;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n\nset @sql_instance = '$server';\nset @params = N'@sql_instance varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"declare @fqdn nvarchar(100);\nexec usp_extended_results @fqdn = @fqdn output;\n\nselect case when default_domain() = 'WORKGROUP' then 'WORKGROUP' ELSE @fqdn END\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql --, @params, @sql_instance;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql --, @params, @sql_instance;",
        "hide": 2,
        "includeAll": false,
        "label": "FQDN",
        "multi": false,
        "name": "fqdn",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n\nset @sql_instance = '$server';\nset @params = N'@sql_instance varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"declare @fqdn nvarchar(100);\nexec usp_extended_results @fqdn = @fqdn output;\n\nselect case when default_domain() = 'WORKGROUP' then 'WORKGROUP' ELSE @fqdn END\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql --, @params, @sql_instance;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql --, @params, @sql_instance;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n--declare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\nselect top 1 collection_time_utc\nfrom [dbo].[file_io_stats]\norder by collection_time_utc desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
        "hide": 2,
        "includeAll": false,
        "label": "Collection Time UTC",
        "multi": false,
        "name": "collection_time_utc",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\n--declare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n--declare @delta_minutes int;\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\nselect top 1 collection_time_utc\nfrom [dbo].[file_io_stats]\norder by collection_time_utc desc\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc;",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @params = N'@perfmon_host_name varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select count(*) as counts from sys.dm_os_schedulers dos where status = 'VISIBLE ONLINE' and is_online = 1;\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name;",
        "hide": 2,
        "includeAll": false,
        "label": "SQL Schedulers",
        "multi": false,
        "name": "sql_schedulers",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @params = N'@perfmon_host_name varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select count(*) as counts from sys.dm_os_schedulers dos where status = 'VISIBLE ONLINE' and is_online = 1;\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\n\nset @sql_instance = '$server';\nset @perfmon_host_name = '$perfmon_host_name';\nset @params = N'@perfmon_host_name varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), sqlserver_start_time) from sys.dm_os_sys_info as osi;\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name;",
        "hide": 2,
        "includeAll": false,
        "label": "SqlInstance Start Time UTC",
        "multi": false,
        "name": "sqlserver_start_time_utc",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\n\nset @sql_instance = '$server';\nset @perfmon_host_name = '$perfmon_host_name';\nset @params = N'@perfmon_host_name varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), sqlserver_start_time) from sys.dm_os_sys_info as osi;\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "t___Database File IO Stats",
  "uid": "database_file_io_stats",
  "version": 19,
  "weekStart": ""
}