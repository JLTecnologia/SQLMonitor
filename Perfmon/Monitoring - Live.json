{
  "__inputs": [
    {
      "name": "DS_SQLSERVER",
      "label": "SqlServer",
      "description": "",
      "type": "datasource",
      "pluginId": "mssql",
      "pluginName": "Microsoft SQL Server"
    }
  ],
  "__elements": [],
  "__requires": [
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "8.4.4"
    },
    {
      "type": "datasource",
      "id": "mssql",
      "name": "Microsoft SQL Server",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Monitor Server Using Live PerfMon Metrics",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1650274440069,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 37,
      "panels": [],
      "title": "Sql Server - Overview",
      "type": "row"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "select * from sys.dm_exec_requests r where blocking_session_id <> 0",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "dark-orange",
                "value": 2
              },
              {
                "color": "dark-red",
                "value": 5
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 0,
        "y": 1
      },
      "id": 21,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "/^counts$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect count(*) as counts from sys.dm_exec_requests r where r.blocking_session_id <> 0\n\"\nSET QUOTED_IDENTIFIER ON\nIF ('$server' = SERVERPROPERTY('ServerName'))\nBEGIN\n  EXEC (@sql);\nEND;\nELSE\nBEGIN\n  EXEC (@sql) AT [$server];\nEND;",
          "refId": "A"
        }
      ],
      "title": "Blocked Sessions",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "unit": "%"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 3,
        "y": 1
      },
      "id": 10,
      "options": {
        "displayLabels": [
          "value"
        ],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": [
            "value"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "time_series",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\ndeclare @object_name varchar(255);\r\nset @object_name = (case when @@SERVICENAME = 'MSSQLSERVER' then 'SQLServer' else 'MSSQL$'+@@SERVICENAME end);\r\n\r\n;with cte_os as (\r\n\tSELECT top 1 'OS' as metric, pc.value\r\n\t\t\t,collection_time_utc\r\n\tFROM dbo.performance_counters pc\r\n\tWHERE $__timeFilter(collection_time_utc) and\r\n\t\t pc.object = 'Processor' and pc.counter = '% processor time' and pc.instance = '_total'\r\n\tORDER BY collection_time_utc desc\r\n)\r\n,cte_sql as (\r\n\tSELECT top 1 'SqlServer' as metric, (pc.value/(select count(*) from sys.dm_os_schedulers dos where status = 'VISIBLE ONLINE')) as value\r\n\t\t\t,collection_time_utc\r\n\t\t\t,row_number()over(partition by pc.object order by collection_time_utc desc) as row_id\r\n\tFROM dbo.performance_counters pc\r\n\tWHERE $__timeFilter(collection_time_utc) and\r\n\t\t pc.object = 'process' and pc.counter = '% processor time' and pc.instance = 'sqlservr'\r\n\tORDER BY collection_time_utc desc\r\n)\r\n--select collection_time_utc as time, metric, value from cte_os\r\n--union all\r\nselect collection_time_utc as time, metric, value from cte_sql\r\nunion all\r\nselect cte_os.collection_time_utc as time, 'Other' as metric, cte_os.value-cte_sql.value as value  from cte_os, cte_sql\r\nunion all\r\nselect collection_time_utc as time, 'Unused' as metric, 100-value from cte_os\r\n\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "CPU",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "gbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 11,
        "y": 1
      },
      "id": 68,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nSELECT [server_ram_gb] = ceiling(osi.physical_memory_kb/1024.0/1024.0)\r\nFROM sys.dm_os_sys_info as osi\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "Box Memory",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 14,
        "y": 1
      },
      "id": 64,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/^os_uptime$/",
          "values": false
        },
        "text": {
          "titleSize": 8,
          "valueSize": 18
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nselect os_uptime = Concat\r\n        (\r\n            RIGHT('00'+CAST(ISNULL((datediff(second,dateadd(MS,-osi.ms_ticks,GETDATE()),GETDATE()) / 3600 / 24), 0) AS VARCHAR(2)),2)\r\n            ,' '\r\n            ,RIGHT('00'+CAST(ISNULL(datediff(second,dateadd(MS,-osi.ms_ticks,GETDATE()),GETDATE()) / 3600  % 24, 0) AS VARCHAR(2)),2)\r\n            ,':'\r\n            ,RIGHT('00'+CAST(ISNULL(datediff(second,dateadd(MS,-osi.ms_ticks,GETDATE()),GETDATE()) / 60 % 60, 0) AS VARCHAR(2)),2)\r\n            ,':'\r\n            ,RIGHT('00'+CAST(ISNULL(datediff(second,dateadd(MS,-osi.ms_ticks,GETDATE()),GETDATE()) % 3600 % 60, 0) AS VARCHAR(2)),2)\r\n        )\r\nfrom sys.dm_os_sys_info as osi\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "OS Uptime",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 17,
        "y": 1
      },
      "id": 83,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": true
        },
        "text": {
          "titleSize": 8,
          "valueSize": 18
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nDECLARE @cpu_info nvarchar(1000);\r\nEXEC xp_instance_regread 'HKEY_LOCAL_MACHINE', 'HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0', 'ProcessorNameString', @value = @cpu_info OUTPUT;\r\n\r\nSELECT @cpu_info\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "Processor Info",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 2048
              },
              {
                "color": "green",
                "value": 4096
              }
            ]
          },
          "unit": "mbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 11,
        "y": 3
      },
      "id": 11,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "time_series",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\ndeclare @object_name varchar(255);\r\nset @object_name = (case when @@SERVICENAME = 'MSSQLSERVER' then 'SQLServer' else 'MSSQL$'+@@SERVICENAME end);\r\n\r\nSELECT top 1 collection_time_utc as time, value as [Available Memory]\r\nFROM dbo.performance_counters pc with (nolock)\r\nWHERE $__timeFilter(collection_time_utc) and\r\n\t  pc.object = 'memory' and pc.counter = 'available mbytes'\r\nORDER BY collection_time_utc desc;\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "Available Memory",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 14,
        "y": 3
      },
      "id": 69,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": true
        },
        "text": {
          "titleSize": 8,
          "valueSize": 18
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nselect virtual_machine_type_desc\r\nfrom sys.dm_os_sys_info as osi\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "Machine Type",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 17,
        "y": 3
      },
      "id": 73,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": true
        },
        "text": {
          "titleSize": 8,
          "valueSize": 18
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nselect convert(varchar,SERVERPROPERTY('ProductVersion'))+' ('+convert(varchar,SERVERPROPERTY('Edition'))+')'\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "SQL Version",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-blue",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 0,
        "y": 4
      },
      "id": 23,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\n--\tQuery to find what's is running on server\r\nSELECT\tgetdate() as time, COUNT(*) as active_request_count\r\nFROM\tsys.dm_exec_sessions AS s\r\nLEFT JOIN sys.dm_exec_requests AS r ON r.session_id = s.session_id\r\nOUTER APPLY sys.dm_exec_sql_text(r.sql_handle) AS st\r\nOUTER APPLY sys.dm_exec_query_plan(r.plan_handle) AS bqp\r\nOUTER APPLY sys.dm_exec_text_query_plan(r.plan_handle,r.statement_start_offset, r.statement_end_offset) as sqp\r\nWHERE\ts.session_id != @@SPID\r\n\tAND (\t(CASE\tWHEN\ts.session_id IN (select ri.blocking_session_id from sys.dm_exec_requests as ri )\r\n\t\t\t\t\t--\tGet sessions involved in blocking (including system sessions)\r\n\t\t\t\t\tTHEN\t1\r\n\t\t\t\t\tWHEN\tr.blocking_session_id IS NOT NULL AND r.blocking_session_id <> 0\r\n\t\t\t\t\tTHEN\t1\r\n\t\t\t\t\tELSE\t0\r\n\t\t\tEND) = 1\r\n\t\t\tOR\r\n\t\t\t(CASE\tWHEN\ts.session_id > 50\r\n\t\t\t\t\t\t\tAND r.session_id IS NOT NULL -- either some part of session has active request\r\n\t\t\t\t\t\t\t--AND ISNULL(open_resultset_count,0) > 0 -- some result is open\r\n\t\t\t\t\t\t\tAND s.status <> 'sleeping'\r\n\t\t\t\t\tTHEN\t1\r\n\t\t\t\t\tELSE\t0\r\n\t\t\tEND) = 1\r\n\t\t\tOR\r\n\t\t\t(CASE\tWHEN\ts.session_id > 50\r\n\t\t\t\t\t\t\tAND ISNULL(r.open_transaction_count,0) > 0\r\n\t\t\t\t\tTHEN\t1\r\n\t\t\t\t\tELSE\t0\r\n\t\t\tEND) = 1\r\n\t\t)\t\t\r\nORDER BY time;\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "Active Requests",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 14,
        "y": 5
      },
      "id": 66,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": true
        },
        "text": {
          "titleSize": 8,
          "valueSize": 18
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nselect convert(varchar,osi.cpu_count)+' / '+convert(varchar,osi.scheduler_count)\r\nfrom sys.dm_os_sys_info as osi\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "CPU (OS / SQL)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 17,
        "y": 5
      },
      "id": 67,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/^os_uptime$/",
          "values": false
        },
        "text": {
          "titleSize": 8,
          "valueSize": 18
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nselect os_uptime = Concat\r\n        (\r\n            RIGHT('00'+CAST(ISNULL((datediff(second,sqlserver_start_time,GETDATE()) / 3600 / 24), 0) AS VARCHAR(2)),2)\r\n            ,' '\r\n            ,RIGHT('00'+CAST(ISNULL(datediff(second,sqlserver_start_time,GETDATE()) / 3600  % 24, 0) AS VARCHAR(2)),2)\r\n            ,':'\r\n            ,RIGHT('00'+CAST(ISNULL(datediff(second,sqlserver_start_time,GETDATE()) / 60 % 60, 0) AS VARCHAR(2)),2)\r\n            ,':'\r\n            ,RIGHT('00'+CAST(ISNULL(datediff(second,sqlserver_start_time,GETDATE()) % 3600 % 60, 0) AS VARCHAR(2)),2)\r\n        )\r\nfrom sys.dm_os_sys_info as osi\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "SqlServer Uptime",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red",
                "value": null
              },
              {
                "color": "dark-red",
                "value": -10
              },
              {
                "color": "dark-red",
                "value": 300
              },
              {
                "color": "super-light-red",
                "value": 600
              },
              {
                "color": "light-green",
                "value": 601
              },
              {
                "color": "dark-green",
                "value": 1200
              }
            ]
          },
          "unit": "dateTimeAsSystem"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 20,
        "y": 5
      },
      "id": 65,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": true
        },
        "text": {
          "titleSize": 8,
          "valueSize": 18
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nselect sqlserver_start_time\r\nfrom sys.dm_os_sys_info as osi\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "SqlServer Start Time",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "Ratio of Total Server Memory to Target Server Memory",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 70
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "%"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 0,
        "y": 6
      },
      "id": 13,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "time_series",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\ndeclare @object_name varchar(255);\nset @object_name = (case when @@SERVICENAME = 'MSSQLSERVER' then 'SQLServer' else 'MSSQL$'+@@SERVICENAME end);\n\nSELECT top 1 ttl.collection_time_utc as time, (ttl.value*100)/tgt.value as [SQLServer Max M/r Usage]\nFROM dbo.performance_counters as ttl\nJOIN dbo.performance_counters as tgt\nON ttl.object = tgt.object \nAND ttl.object = (@object_name+':Memory Manager')\nAND ttl.counter = 'Total Server Memory (KB)'\nAND tgt.counter = 'Target Server Memory (KB)'\nORDER BY time desc;\n\"\nSET QUOTED_IDENTIFIER ON\nIF ('$server' = SERVERPROPERTY('ServerName'))\nBEGIN\n  EXEC (@sql);\nEND;\nELSE\nBEGIN\n  EXEC (@sql) AT [$server];\nEND;",
          "refId": "A"
        }
      ],
      "title": "Sql M/r Usage",
      "transformations": [],
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "Specifies the memory model used by SQL Server to allocate memory. Not nullable.\n\nCONVENTIONAL = SQL Server is using Conventional Memory model to allocate memory. This is default sql memory model when SQL Server service account does not have Lock Pages in Memory privileges during startup.\n\nLOCK_PAGES = SQL Server is using Lock Pages in Memory to allocate memory. This is the default sql memory manager when SQL Server service account possess Lock Pages in Memory privilege during SQL Server startup.\n\nLARGE_PAGES = SQL Server is using Large Pages in Memory to allocate memory. SQL Server uses Large Pages allocator to allocate memory only with Enterprise edition when SQL Server service account possess Lock Pages in Memory privilege during server startup and when Trace Flag 834 is turned ON.",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "CONVENTIONAL": {
                  "color": "red",
                  "index": 0,
                  "text": "CONVENTIONAL"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 11,
        "y": 6
      },
      "id": 70,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": true
        },
        "text": {
          "titleSize": 8,
          "valueSize": 18
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nselect sql_memory_model_desc\r\nfrom sys.dm_os_sys_info as osi\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "Memory Model",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 6,
        "x": 14,
        "y": 7
      },
      "id": 74,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": true
        },
        "text": {
          "titleSize": 8,
          "valueSize": 18
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nselect CONVERT(varchar,SERVERPROPERTY('IsClustered'))+' / '+CONVERT(varchar,SERVERPROPERTY('IsHadrEnabled'))\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "IsClustered / IsHadrEnabled",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 20,
        "y": 7
      },
      "id": 75,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/.*/",
          "values": true
        },
        "text": {
          "titleSize": 8,
          "valueSize": 18
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\n--select host_distribution + ' ('+host_architecture+')' from sys.dm_os_host_info\r\nDECLARE @value nvarchar(1000);\r\nEXEC xp_instance_regread 'HKEY_LOCAL_MACHINE', 'SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion', 'ProductName', @value = @value OUTPUT;\r\nSELECT @value\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "Host Distribution",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red",
                "value": null
              },
              {
                "color": "dark-red",
                "value": -10
              },
              {
                "color": "dark-red",
                "value": 300
              },
              {
                "color": "super-light-red",
                "value": 600
              },
              {
                "color": "light-green",
                "value": 601
              },
              {
                "color": "dark-green",
                "value": 1200
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 11,
        "y": 8
      },
      "id": 15,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "/^page_life_expectancy$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\ndeclare @object_name varchar(255);\r\nset @object_name = (case when @@SERVICENAME = 'MSSQLSERVER' then 'SQLServer' else 'MSSQL$'+@@SERVICENAME end);\r\n\r\nSELECT /* Grafana => PLE */ top 1 collection_time_utc as time, value as page_life_expectancy\r\nFROM dbo.performance_counters pc with (nolock)\r\nWHERE $__timeFilter(collection_time_utc) and\r\n\t  pc.object = (@object_name+':Buffer Manager')\r\n\t and pc.counter in ('Page Life Expectancy')\r\nORDER BY collection_time_utc desc;\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "PLE ",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "light-yellow",
                "value": 2
              },
              {
                "color": "dark-orange",
                "value": 5
              },
              {
                "color": "semi-dark-red",
                "value": 10
              },
              {
                "color": "dark-red",
                "value": 25
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 0,
        "y": 9
      },
      "id": 14,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\ndeclare @object_name varchar(255);\r\nset @object_name = (case when @@SERVICENAME = 'MSSQLSERVER' then 'SQLServer' else 'MSSQL$'+@@SERVICENAME end);\r\n\r\nSELECT top 1 collection_time_utc as time, value as [Memory Grants Pending]\r\nFROM dbo.performance_counters pc with (nolock)\r\nWHERE $__timeFilter(collection_time_utc) and\r\n\t  pc.object = (@object_name+':Memory Manager') and pc.counter = 'Memory Grants Pending'\r\nORDER BY collection_time_utc desc;\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "M/r Grants Pending",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "kbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 3,
        "y": 9
      },
      "id": 4,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\ndeclare @object_name varchar(255);\r\nset @object_name = (case when @@SERVICENAME = 'MSSQLSERVER' then 'SQLServer' else 'MSSQL$'+@@SERVICENAME end);\r\n\r\nselect top 1 collection_time_utc as time, \r\n       value as SqlServer_Memory\r\nfrom [dbo].[performance_counters] as pc\r\nwhere --$__timeFilter(collection_time_utc) and\r\n\t  pc.object = (@object_name+':Memory Manager')\r\n\t\tand pc.counter in ('Total Server Memory (KB)')\r\norder by collection_time_utc desc;\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
          "refId": "A"
        }
      ],
      "title": "SqlServer M/r Usage",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "${DS_SQLSERVER}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-yellow",
                "value": null
              }
            ]
          },
          "unit": "string"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 7,
        "y": 9
      },
      "id": 84,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.4",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "format": "table",
          "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect count(*) as counts\nfrom [dbo].[os_task_list] otl\nwhere collection_time_utc = (select max(i.collection_time_utc) from [dbo].[os_task_list] i)\n\"\nSET QUOTED_IDENTIFIER ON\nIF ('$server' = SERVERPROPERTY('ServerName'))\nBEGIN\n  EXEC (@sql);\nEND;\nELSE\nBEGIN\n  EXEC (@sql) AT [$server];\nEND;",
          "refId": "A"
        }
      ],
      "title": "OS Processes",
      "type": "stat"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 33,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "description": "https://sqlperformance.com/2014/10/sql-performance/knee-jerk-page-life-expectancy",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "% CPU",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "line+area"
                }
              },
              "mappings": [],
              "max": 100,
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent"
                  },
                  {
                    "color": "orange",
                    "value": 80
                  },
                  {
                    "color": "red",
                    "value": 90
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 2
          },
          "id": 16,
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLSERVER}"
              },
              "format": "time_series",
              "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect pc.collection_time_utc as time, \n\t\tcase when (pc.object = 'processor' and pc.counter in ('% Processor Time') and pc.instance = '_total') then 'OS'\n\t\t\twhen (pc.object = 'process' and pc.counter in ('% Processor Time') and pc.instance = 'sqlservr') then 'Sql Server'\n\t\t\telse null\n\t\t\tend as metric,\n\t--object, counter as metric, instance\n\tcase when pc.object = 'processor' then pc.value else pc.value/(select count(*) from sys.dm_os_schedulers dos where status = 'VISIBLE ONLINE') end as value\nfrom dbo.performance_counters pc with (nolock)\nwhere $__timeFilter(collection_time_utc) and\n\t ((pc.object = 'processor' and pc.counter in ('% Processor Time') and pc.instance = '_total')\n\tor (pc.object = 'process' and pc.counter in ('% Processor Time') and pc.instance = 'sqlservr')\n\t)\norder by time\n\"\nSET QUOTED_IDENTIFIER ON\nIF ('$server' = SERVERPROPERTY('ServerName'))\nBEGIN\n  EXEC (@sql);\nEND;\nELSE\nBEGIN\n  EXEC (@sql) AT [$server];\nEND;",
              "refId": "A"
            }
          ],
          "title": "CPU",
          "type": "timeseries"
        }
      ],
      "title": "Trend - CPU Utilization",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 59,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "log": 2,
                  "type": "log"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "line+area"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent"
                  },
                  {
                    "color": "orange",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 2
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 3
          },
          "id": 57,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull",
                "max"
              ],
              "displayMode": "table",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLSERVER}"
              },
              "format": "time_series",
              "hide": false,
              "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\ndeclare @object_name varchar(255);\nset @object_name = (case when @@SERVICENAME = 'MSSQLSERVER' then 'SQLServer' else 'MSSQL$'+@@SERVICENAME end);\nselect pc.collection_time_utc as time, \n\tcounter as metric\n\t--,instance,\n\t,pc.value\nfrom dbo.performance_counters pc with (nolock)\nwhere $__timeFilter(collection_time_utc) and\n\t  (\t(pc.object = (@object_name+':Memory Manager')\n\t\tand pc.counter in ('Memory Grants Outstanding','Memory Grants Pending'))\n\t)\norder by time\n\"\nSET QUOTED_IDENTIFIER ON\nIF ('$server' = SERVERPROPERTY('ServerName'))\nBEGIN\n  EXEC (@sql);\nEND;\nELSE\nBEGIN\n  EXEC (@sql) AT [$server];\nEND;",
              "refId": "A"
            }
          ],
          "title": "Memory Grants Pending",
          "type": "timeseries"
        }
      ],
      "title": "Trend - Memory Grants Pending",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 29,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "description": "https://sqlperformance.com/2014/10/sql-performance/knee-jerk-page-life-expectancy",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "line+area"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  },
                  {
                    "color": "transparent",
                    "value": 600
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 8,
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull",
                "max",
                "min"
              ],
              "displayMode": "table",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLSERVER}"
              },
              "format": "time_series",
              "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\ndeclare @object_name varchar(255);\nset @object_name = (case when @@SERVICENAME = 'MSSQLSERVER' then 'SQLServer' else 'MSSQL$'+@@SERVICENAME end);\n\nselect pc.collection_time_utc as time\n\t,counter as metric\n\t--,object, counter, instance\n\t,pc.value\nfrom dbo.performance_counters pc with (nolock)\nwhere $__timeFilter(collection_time_utc) and\n\t  pc.object = (@object_name+':Buffer Manager')\n\t and pc.counter in ('Page Life Expectancy')\norder by time\n\"\nSET QUOTED_IDENTIFIER ON\nIF ('$server' = SERVERPROPERTY('ServerName'))\nBEGIN\n  EXEC (@sql);\nEND;\nELSE\nBEGIN\n  EXEC (@sql) AT [$server];\nEND;",
              "refId": "A"
            }
          ],
          "title": "Page Life Expectancy",
          "type": "timeseries"
        }
      ],
      "title": "Trend - Page Life Expectancy",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 27,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "description": "https://sqlperformance.com/2014/10/sql-performance/knee-jerk-page-life-expectancy",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "log": 10,
                  "type": "log"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "id": 18,
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull",
                "max",
                "min"
              ],
              "displayMode": "table",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLSERVER}"
              },
              "format": "time_series",
              "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\ndeclare @object_name varchar(255);\nset @object_name = (case when @@SERVICENAME = 'MSSQLSERVER' then 'SQLServer' else 'MSSQL$'+@@SERVICENAME end);\nselect pc.collection_time_utc as time, \n\tcounter as metric\n\t--,instance,\n\t,pc.value\nfrom dbo.performance_counters pc with (nolock)\nwhere $__timeFilter(collection_time_utc) and\n\t  pc.object = (@object_name+':sql statistics') and pc.counter in ('Batch Requests/sec')\norder by time\n\"\nSET QUOTED_IDENTIFIER ON\nIF ('$server' = SERVERPROPERTY('ServerName'))\nBEGIN\n  EXEC (@sql);\nEND;\nELSE\nBEGIN\n  EXEC (@sql) AT [$server];\nEND;",
              "refId": "A"
            }
          ],
          "title": "Batch Requests Per Second",
          "type": "timeseries"
        }
      ],
      "title": "Trend - Batch Request/Sec",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 47,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "description": "WaitWaits for selected duration",
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": "auto",
                "displayMode": "auto"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "CollectionTime"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 186
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Duration_S"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 93
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "WaitType"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 186
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Duration"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 94
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Percentage"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 118
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Wait_S"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 116
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Resource_S"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 126
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Signal_S"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 109
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "WaitCount"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 97
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "time"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 181
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "%"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 64
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 6
          },
          "id": 49,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLSERVER}"
              },
              "format": "table",
              "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nSET QUOTED_IDENTIFIER OFF\r\nDECLARE @sql varchar(max) = \"\r\nset nocount on;\r\n/*\tGet @start_time & @end_time from user/Grafana\r\n\tGet times when WaitStats was flushed\r\n\tDivide wait stats for the intervals\r\n*/\r\nDECLARE @server_name varchar(256);\r\nDECLARE @start_time datetime2;\r\nDECLARE @end_time datetime2;\r\n--set @server_name = '$server';\r\n--set @start_time = DATEADD(MINUTE,-180,GETDATE());\r\n--set @end_time = GETDATE();\r\nselect @start_time = st.local_time, @end_time = et.local_time \r\nfrom dbo.utc2local($__timeFrom()) as st join dbo.utc2local($__timeTo()) et on 1 = 1;\r\n\r\nDECLARE @verbose bit = 0;\r\n\r\nif OBJECT_ID('tempdb..#wait_stats_lower_bounds') is not null\r\n\tdrop table tempdb..#wait_stats_lower_bounds;\r\nwith T_waits_ranges_lower_bounds as (\r\n\tselect *\r\n\tfrom (\r\n\t\tSELECT si.wait_stats_cleared_time as point_in_time\r\n\t\tFROM dbo.dm_os_sys_info AS si\r\n\t\tWHERE 1 = 1\r\n\t\t--and pc.server_name = @server_name\r\n\t\tand collection_time BETWEEN @start_time AND @end_time\r\n\t\t--\r\n\t\tunion\r\n\t\t--\r\n\t\tselect point_in_time\r\n\t\tfrom (values (@start_time),(@end_time)) Times (point_in_time)\r\n\t) as ranges\r\n)\r\nselect /* Get times where WaitStats was Cleared */\r\n\t   IDENTITY(int,1,1) as id, \r\n\t   point_in_time\r\ninto #wait_stats_lower_bounds\r\nfrom T_waits_ranges_lower_bounds\r\norder by point_in_time asc;\r\n\r\nif OBJECT_ID('tempdb..#wait_stats_time_range') is not null\r\n\tdrop table tempdb..#wait_stats_time_range;\r\nselect l.id as range_id, l.point_in_time as range_lower_time, u.point_in_time as range_upper_time\r\ninto #wait_stats_time_range\r\nfrom #wait_stats_lower_bounds as l\r\njoin #wait_stats_lower_bounds as u on u.id = l.id + 1\r\norder by range_id;\r\n\r\n\r\nif @verbose = 1\r\nbegin\r\n\tselect [RunningQuery] = '#wait_stats_lower_bounds', * from #wait_stats_lower_bounds;\r\n\tselect [RunningQuery] = '#wait_stats_time_range', * from #wait_stats_time_range;\r\n\tselect count(distinct Collection_Time) as WaitStats_Sample_Counts from [dbo].[WaitStats];\r\nend\r\n\r\nIF OBJECT_ID('tempdb..#Wait_Stats_Delta') IS NOT NULL\r\n\tDROP TABLE #Wait_Stats_Delta;\r\nCREATE TABLE #Wait_Stats_Delta\r\n(\r\n\t--[id_T1] [int] NULL,\r\n\t--[id_T2] [int] NULL,\r\n\t--[point_in_time_T1] [datetime2](7) NULL,\r\n\t--[point_in_time_T2] [datetime2](7) NULL,\r\n\t--[Collection_Time_T1] [datetime2](7) NULL,\r\n\t--[Collection_Time_T2] [datetime2](7) NULL,\r\n\t[RowNum] [int] NOT NULL,\r\n\t[Collection_Time] [datetime2](7) NOT NULL,\r\n\t[Collection_Time_Duration_Seconds] [bigint] NOT NULL,\r\n\t[WaitType] [nvarchar](120) NOT NULL,\r\n\t[Wait_S] [decimal](15, 2) NULL,\r\n\t[Resource_S] [decimal](15, 2) NULL,\r\n\t[Signal_S] [decimal](15, 2) NULL,\r\n\t[WaitCount] [bigint] NULL,\r\n\t[Percentage] [decimal](5,2) NULL,\r\n\t[AvgWait_S] [decimal](35, 22) NULL,\r\n\t[AvgRes_S] [decimal](35, 22) NULL,\r\n\t[AvgSig_S] [decimal](35, 22) NULL\r\n)\r\n\r\ndeclare @l_id int\r\n\t\t,@l_point_in_time datetime2\r\n\t\t,@l_counter int = 1\r\n\t\t,@l_counter_max int;\r\n\r\nselect @l_counter_max = max(range_id) from #wait_stats_time_range;\r\n/* Loop for N-1 times, where N =  point in times for range calculation */\r\nwhile @l_counter <= @l_counter_max -- execute for N-1 times\r\nbegin\r\n\r\n\tif OBJECT_ID('tempdb..#wait_stats_range_lower') is not null\r\n\t\tdrop table #wait_stats_range_lower;\r\n\tselect  /*\tGet wait stats for start time of the time range.\r\n\t\t\t*/\r\n\t\t\tid = r.range_id, r.range_lower_time, r.range_upper_time,\r\n\t\t\tws.Collection_Time, \r\n\t\t\tws.WaitType, \r\n\t\t\tws.Wait_S, ws.Resource_S, ws.Signal_S, ws.WaitCount, ws.Percentage\r\n\t\t\t--,ws.AvgWait_S, ws.AvgRes_S, ws.AvgSig_S\r\n\t\t\t,[condition] = (case when (@l_counter <> 1) and (@l_counter <>  @l_counter_max) -- Intermediate range\r\n\t\t\t\t\t\t\t\t\t\tthen 'Intermediate range'\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = 1) and (@l_counter = @l_counter_max) -- 1st/last, and only range\r\n\t\t\t\t\t\t\t\t\t\tthen '1st/last, and only range'\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = 1) and (@l_counter <> @l_counter_max) -- 1st and intermediate range\r\n\t\t\t\t\t\t\t\t\t\tthen '1st and intermediate range'\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = @l_counter_max) and (@l_counter - 1 <> 0) -- last and intermediate\r\n\t\t\t\t\t\t\t\t\t\tthen 'last and intermediate'\r\n\t\t\t\t\t\t\t\t\telse null\r\n\t\t\t\t\t\t\t\t\tend)\r\n\tinto #wait_stats_range_lower\r\n\tfrom #wait_stats_time_range as r, [dbo].[WaitStats] AS ws with (nolock)\r\n\twhere r.range_id = @l_counter /* loop filter */\r\n\t\tand ws.Collection_Time = (\tcase when (@l_counter <> 1) and (@l_counter <>  @l_counter_max) -- Intermediate range\r\n\t\t\t\t\t\t\t\t\t\tthen (select MIN(wsi.Collection_Time) as Collection_Time from [dbo].[WaitStats] as wsi with (nolock) where wsi.Collection_Time > r.range_lower_time)\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = 1) and (@l_counter = @l_counter_max) -- 1st/last, and only range\r\n\t\t\t\t\t\t\t\t\t\tthen (select MIN(wsi.Collection_Time) as Collection_Time from [dbo].[WaitStats] as wsi with (nolock) where wsi.Collection_Time >= r.range_lower_time)\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = 1) and (@l_counter <> @l_counter_max) -- 1st and intermediate range\r\n\t\t\t\t\t\t\t\t\t\tthen (select MIN(wsi.Collection_Time) as Collection_Time from [dbo].[WaitStats] as wsi with (nolock) where wsi.Collection_Time >= r.range_lower_time)\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = @l_counter_max) and (@l_counter - 1 <> 0) -- last and intermediate\r\n\t\t\t\t\t\t\t\t\t\tthen (select MIN(wsi.Collection_Time) as Collection_Time from [dbo].[WaitStats] as wsi with (nolock) where wsi.Collection_Time > r.range_lower_time)\r\n\t\t\t\t\t\t\t\t\telse null\r\n\t\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\tif OBJECT_ID('tempdb..#wait_stats_range_upper') is not null\r\n\t\tdrop table #wait_stats_range_upper;\r\n\tselect  /*\tGet wait stats for start time of the time range.\r\n\t\t\t*/\r\n\t\t\tid = r.range_id, r.range_lower_time, r.range_upper_time,\r\n\t\t\tws.Collection_Time, \r\n\t\t\tws.WaitType, \r\n\t\t\tws.Wait_S, ws.Resource_S, ws.Signal_S, ws.WaitCount, ws.Percentage\r\n\t\t\t--,ws.AvgWait_S, ws.AvgRes_S, ws.AvgSig_S\r\n\t\t\t,[condition] = (case when (@l_counter <> 1) and (@l_counter <>  @l_counter_max) -- Intermediate range\r\n\t\t\t\t\t\t\t\t\t\tthen 'Intermediate range'\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = 1) and (@l_counter = @l_counter_max) -- 1st/last, and only range\r\n\t\t\t\t\t\t\t\t\t\tthen '1st/last, and only range'\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = 1) and (@l_counter <> @l_counter_max) -- 1st and intermediate range\r\n\t\t\t\t\t\t\t\t\t\tthen '1st and intermediate range'\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = @l_counter_max) and (@l_counter - 1 <> 0) -- last and intermediate\r\n\t\t\t\t\t\t\t\t\t\tthen 'last and intermediate'\r\n\t\t\t\t\t\t\t\t\telse null\r\n\t\t\t\t\t\t\t\t\tend)\r\n\tinto #wait_stats_range_upper\r\n\tfrom #wait_stats_time_range as r, [dbo].[WaitStats] AS ws with (nolock)\r\n\twhere r.range_id = @l_counter /* loop filter */\r\n\t\tand ws.Collection_Time = (\tcase when (@l_counter <> 1) and (@l_counter <>  @l_counter_max) -- Intermediate range\r\n\t\t\t\t\t\t\t\t\t\tthen (select MAX(wsi.Collection_Time) as Collection_Time from [dbo].[WaitStats] as wsi with (nolock) where wsi.Collection_Time < r.range_upper_time)\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = 1) and (@l_counter = @l_counter_max) -- 1st/last, and only range\r\n\t\t\t\t\t\t\t\t\t\tthen (select MAX(wsi.Collection_Time) as Collection_Time from [dbo].[WaitStats] as wsi with (nolock) where wsi.Collection_Time <= r.range_upper_time)\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = 1) and (@l_counter <> @l_counter_max) -- 1st and intermediate range\r\n\t\t\t\t\t\t\t\t\t\tthen (select MAX(wsi.Collection_Time) as Collection_Time from [dbo].[WaitStats] as wsi with (nolock) where wsi.Collection_Time < r.range_upper_time)\r\n\t\t\t\t\t\t\t\t\t\twhen (@l_counter = @l_counter_max) and (@l_counter - 1 <> 0) -- last and intermediate\r\n\t\t\t\t\t\t\t\t\t\tthen (select MAX(wsi.Collection_Time) as Collection_Time from [dbo].[WaitStats] as wsi with (nolock) where wsi.Collection_Time <= r.range_upper_time)\r\n\t\t\t\t\t\t\t\t\telse null\r\n\t\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\tif @verbose = 1\r\n\tbegin\r\n\t\tselect [@l_counter] = @l_counter, [@l_counter_max] = @l_counter_max;\r\n\t\tselect [RunningQuery] = '#wait_stats_range_lower', * from #wait_stats_range_lower;\r\n\t\tselect [RunningQuery] = '#wait_stats_range_upper', * from #wait_stats_range_upper;\r\n\tend\r\n\t\r\n\t\r\n\t;with T_Waits_Delta AS (\r\n\t\tSELECT Collection_Time, Collection_Time_Duration_Seconds, WaitType, Wait_S, Resource_S, Signal_S, WaitCount,\r\n\t\t\t\t[Percentage],\r\n\t\t\t\tAvgWait_S = Wait_S/WaitCount, \r\n\t\t\t\tAvgRes_S = Resource_S/WaitCount, \r\n\t\t\t\tAvgSig_S = Signal_S/WaitCount\r\n\t\t--INTO tempdb..Wait_Stats_Delta\r\n\t\tFROM (\r\n\t\t\t\tSELECT --id_T1 = T1.id, id_T2 = T2.id,\r\n\t\t\t\t\t\t--point_in_time_T1 = T1.point_in_time, point_in_time_T2 = T2.point_in_time,\r\n\t\t\t\t\t\t--Collection_Time_T1 = T1.Collection_Time, Collection_Time_T2 = T2.Collection_Time,\r\n\t\t\t\t\t\t[RunningQuery] = 'Wait_Stats_Delta',\r\n\t\t\t\t\t\tCollection_Time = COALESCE(T2.Collection_Time,T1.Collection_Time),\r\n\t\t\t\t\t\tCollection_Time_Duration_Seconds = DATEDIFF(second,T1.Collection_Time,T2.Collection_Time),\r\n\t\t\t\t\t\tWaitType = COALESCE(T1.WaitType,T2.WaitType),\r\n\t\t\t\t\t\tWait_S = ISNULL(T2.Wait_S,0.0) - ISNULL(T1.Wait_S,0.0),\r\n\t\t\t\t\t\tResource_S = ISNULL(T2.Resource_S,0.0) - ISNULL(T1.Resource_S,0.0),\r\n\t\t\t\t\t\tSignal_S = ISNULL(T2.Signal_S,0.0) - ISNULL(T1.Signal_S,0.0),\r\n\t\t\t\t\t\tWaitCount = ISNULL(T2.WaitCount,0.0) - ISNULL(T1.WaitCount,0.0),\r\n\t\t\t\t\t\t[Percentage] = NULL\r\n\t\t\t\tFROM #wait_stats_range_lower as T1 full outer join #wait_stats_range_upper as T2 on T2.WaitType = T1.WaitType\r\n\t\t\t) as waits\r\n\t\tWHERE 1 = 1\r\n\t\t\tAND WaitCount > 0\r\n\t)\r\n\t\r\n\tINSERT #Wait_Stats_Delta\r\n\tSELECT ROW_NUMBER() OVER(ORDER BY Wait_S DESC, Resource_S DESC) AS [RowNum],\r\n\t\t\tCollection_Time = COALESCE(dur.Collection_Time,d.Collection_Time), \r\n\t\t\tCollection_Time_Duration_Seconds = COALESCE(dur.Collection_Time_Duration_Seconds,d.Collection_Time_Duration_Seconds, r.Range_Duration_Seconds), \r\n\t\t\tWaitType, Wait_S, Resource_S, Signal_S, WaitCount,\r\n\t\t\t\t[Percentage] = (Wait_S*100.0)/SUM(Wait_S)OVER(),\r\n\t\t\t\tAvgWait_S, AvgRes_S, AvgSig_S\r\n\tFROM T_Waits_Delta as d\r\n\tJOIN (select max(Collection_Time_Duration_Seconds) as Collection_Time_Duration_Seconds, max(Collection_Time) as Collection_Time from T_Waits_Delta) as dur ON 1 = 1\r\n\tJOIN (select DATEDIFF(second,r.range_lower_time,r.range_upper_time) AS Range_Duration_Seconds from #wait_stats_time_range as r where r.range_id = @l_counter) as r ON 1 = 1\r\n\tWHERE 1 = 1\r\n\t\tAND Wait_S >= 0.0\r\n\tORDER BY Wait_S DESC;\t\r\n\t\r\n\r\n\tset @l_counter += 1;\r\nend\r\n\r\nSELECT\t--dbo.local2utc(CAST(W1.Collection_Time AS smalldatetime)) as [time],\r\n\t\tl2u.utc_time as [time],\r\n\t\tMAX ([W1].WaitType) AS [WaitType],\r\n\t\tCAST (MAX ([W1].[Percentage]) AS DECIMAL (5,2)) AS [Percentage],\r\n\t\t(select duration from dbo.time2duration( cast(MAX([W1].Wait_S) as int), 's' )) AS [Wait_S],\r\n\t\t--t2d_w.duration as [Wait_S],\r\n\t\t----CAST (MAX ([W1].Resource_S) AS DECIMAL (16,2)) AS [Resource_S],\r\n\t\t--t2d_r.duration as [Resource_S],\r\n\t\t(select duration from dbo.time2duration( cast(MAX([W1].Resource_S) as int), 's' )) AS [Resource_S],\r\n\t\t--CAST (MAX ([W1].Signal_S) AS DECIMAL (16,2)) AS [Signal_S],\r\n\t\t(select duration from dbo.time2duration( cast(MAX([W1].Signal_S) as int), 's' )) AS [Signal_S],\r\n\t\t--t2d_s.duration as [Signal_S],\r\n\t\tMAX ([W1].[WaitCount]) AS [WaitCount],\r\n\t\tCAST ((MAX ([W1].Wait_S) / MAX ([W1].[WaitCount])) AS DECIMAL (16,4)) AS [AvgWait_S],\r\n\t\tCAST ((MAX ([W1].Resource_S) / MAX ([W1].[WaitCount])) AS DECIMAL (16,4)) AS [AvgRes_S],\r\n\t\tCAST ((MAX ([W1].Signal_S) / MAX ([W1].[WaitCount])) AS DECIMAL (16,4)) AS [AvgSig_S]\r\n\t\t--,CAST ('https://www.sqlskills.com/help/waits/' + MAX ([W1].[wait_type]) as XML) AS [Help/Info URL]\r\nFROM #Wait_Stats_Delta AS [W1]\r\nINNER JOIN #Wait_Stats_Delta AS [W2] ON W1.Collection_Time = W2.Collection_Time AND W2.[RowNum] <= [W1].[RowNum]\r\ncross apply dbo.local2utc([W1].[Collection_Time]) as l2u\r\n--cross apply dbo.time2duration( cast(MAX([W1].Wait_S) as int), 's' ) as t2d_w\r\n--cross apply dbo.time2duration( cast(MAX([W1].Resource_S) as int), 's' ) as t2d_r\r\n--cross apply dbo.time2duration( cast(MAX([W1].Signal_S) as int), 's' ) as t2d_s\r\n--GROUP BY [W1].[Collection_Time], [W1].[RowNum]\r\nGROUP BY l2u.utc_time, [W1].[RowNum]\r\nHAVING SUM ([W2].[Percentage]) - MAX( [W1].[Percentage] ) < 95 -- percentage threshold\r\nORDER BY [time] asc, [Percentage] desc;\r\n\"\r\nSET QUOTED_IDENTIFIER ON\r\nIF ('$server' = SERVERPROPERTY('ServerName'))\r\nBEGIN\r\n  EXEC (@sql);\r\nEND;\r\nELSE\r\nBEGIN\r\n  EXEC (@sql) AT [$server];\r\nEND;",
              "refId": "A"
            }
          ],
          "title": "Wait Stats - Delta",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {},
                "renameByName": {
                  "AvgRes_S": "Avg Res Wait (Sec)",
                  "AvgSig_S": "Avg Sig Wait (Sec)",
                  "AvgWait_S": "Avg Wait (Sec)",
                  "Percentage": "%",
                  "Resource_S": "Resource Wait",
                  "Signal_S": "Signal Wait",
                  "WaitCount": "Wait Count",
                  "WaitType": "Wait Type",
                  "Wait_S": "Wait Duration",
                  "time": "Time"
                }
              }
            }
          ],
          "transparent": true,
          "type": "table"
        }
      ],
      "repeat": "server",
      "title": "Delta - Wait Stats",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 79,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "description": "All the process running at the moment of time",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": true
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  },
                  {
                    "color": "transparent",
                    "value": 600
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "cpu_rank"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 94
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "time"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 172
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 77,
          "options": {
            "footer": {
              "fields": [],
              "reducer": [],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLSERVER}"
              },
              "format": "table",
              "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\n;with cte_aggregated as (\n\tselect collection_time_utc, task_name, count(*) as counts, memory_kb = sum(memory_kb), cpu_time_seconds = sum(cpu_time_seconds)\n\t\t\t,cpu_rank = DENSE_RANK()over(partition by otl.collection_time_utc order by sum(cpu_time_seconds) desc)\n\t\t\t--,memory_row_id = DENSE_RANK()over(partition by otl.collection_time_utc order by sum(memory_kb) desc)\n\tfrom [dbo].[os_task_list] otl\n\twhere $__timeFilter(collection_time_utc)\n\t\t--collection_time_utc > dateadd(minute,-2,getutcdate())\n\tgroup by collection_time_utc, task_name\n)\nselect collection_time_utc as time, cpu_rank, task_name, \n\t\t--cpu_time_seconds, \n\t\t[cpu_time (dd hh:mm:ss)] = Concat\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tRIGHT('00'+CAST(ISNULL((cpu_time_seconds / 3600 / 24), 0) AS VARCHAR(2)),2)\n\t\t\t\t\t\t\t\t\t,' '\n\t\t\t\t\t\t\t\t\t,RIGHT('00'+CAST(ISNULL(cpu_time_seconds / 3600  % 24, 0) AS VARCHAR(2)),2)\n\t\t\t\t\t\t\t\t\t,':'\n\t\t\t\t\t\t\t\t\t,RIGHT('00'+CAST(ISNULL(cpu_time_seconds / 60 % 60, 0) AS VARCHAR(2)),2)\n\t\t\t\t\t\t\t\t\t,':'\n\t\t\t\t\t\t\t\t\t,RIGHT('00'+CAST(ISNULL(cpu_time_seconds % 3600 % 60, 0) AS VARCHAR(2)),2)\n\t\t\t\t\t\t\t\t),\n\t\tcounts, memory_kb\nfrom cte_aggregated\nwhere cpu_rank <= $row_limit\norder by time, cpu_rank\n\"\nSET QUOTED_IDENTIFIER ON\nIF ('$server' = SERVERPROPERTY('ServerName'))\nBEGIN\n  EXEC (@sql);\nEND;\nELSE\nBEGIN\n  EXEC (@sql) AT [$server];\nEND;",
              "refId": "A"
            }
          ],
          "title": "Tasks (Processes) By CPU Utilization",
          "type": "table"
        }
      ],
      "title": "OS Tasks (Processes) - CPU Utilization",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 18
      },
      "id": 82,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${DS_SQLSERVER}"
          },
          "description": "All the process running at the moment of time",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": true
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  },
                  {
                    "color": "transparent",
                    "value": 600
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "time"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 180
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "memory_rank"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 139
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 80,
          "options": {
            "footer": {
              "fields": [],
              "reducer": [],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLSERVER}"
              },
              "format": "table",
              "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\n;with cte_aggregated as (\n\tselect collection_time_utc, task_name, count(*) as counts, \n\t      memory_kb = sum(memory_kb), \n\t      cpu_time_seconds = sum(cpu_time_seconds)\n\t\t\t  --,cpu_row_id = DENSE_RANK()over(partition by otl.collection_time_utc order by sum(cpu_time_seconds) desc)\n\t\t\t  ,memory_rank = DENSE_RANK()over(partition by otl.collection_time_utc order by sum(memory_kb) desc)\n\tfrom [dbo].[os_task_list] otl\n\twhere $__timeFilter(collection_time_utc)\n\t\t--collection_time_utc > dateadd(minute,-2,getutcdate())\n\tgroup by collection_time_utc, task_name\n)\nselect collection_time_utc as time, memory_rank, task_name, \n      memory = case when memory_kb >= 1024*1024 then convert(varchar, convert(numeric(20,2),memory_kb/(1024.0*1024.0)))+' gb'\n                    when memory_kb >= 1024 then convert(varchar, convert(numeric(20,2),memory_kb/1024.0))+' mb'\n                    else convert(varchar, memory_kb)+' kb'\n                    end, \n      counts, \n      [cpu_time (dd hh:mm:ss)] = Concat\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tRIGHT('00'+CAST(ISNULL((cpu_time_seconds / 3600 / 24), 0) AS VARCHAR(2)),2)\n\t\t\t\t\t\t\t\t\t,' '\n\t\t\t\t\t\t\t\t\t,RIGHT('00'+CAST(ISNULL(cpu_time_seconds / 3600  % 24, 0) AS VARCHAR(2)),2)\n\t\t\t\t\t\t\t\t\t,':'\n\t\t\t\t\t\t\t\t\t,RIGHT('00'+CAST(ISNULL(cpu_time_seconds / 60 % 60, 0) AS VARCHAR(2)),2)\n\t\t\t\t\t\t\t\t\t,':'\n\t\t\t\t\t\t\t\t\t,RIGHT('00'+CAST(ISNULL(cpu_time_seconds % 3600 % 60, 0) AS VARCHAR(2)),2)\n\t\t\t\t\t\t\t\t)\nfrom cte_aggregated\nwhere memory_rank <= $row_limit\norder by time, memory_rank\n\"\nSET QUOTED_IDENTIFIER ON\nIF ('$server' = SERVERPROPERTY('ServerName'))\nBEGIN\n  EXEC (@sql);\nEND;\nELSE\nBEGIN\n  EXEC (@sql) AT [$server];\nEND;",
              "refId": "A"
            }
          ],
          "title": "Tasks (Processes) By Memory Utilization",
          "transformations": [],
          "type": "table"
        }
      ],
      "title": "OS Tasks (Processes) - Memory Utilization",
      "type": "row"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 35,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "definition": "select srvname from sys.sysservers where providername = 'SQLOLEDB'",
        "hide": 0,
        "includeAll": false,
        "label": "Server",
        "multi": false,
        "name": "server",
        "options": [],
        "query": "select srvname from sys.sysservers where providername = 'SQLOLEDB'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query",
        "datasource": "${DS_SQLSERVER}"
      },
      {
        "current": {
          "selected": false,
          "text": "300",
          "value": "300"
        },
        "description": "How many rows to return from resultset",
        "hide": 0,
        "label": "Rows Limit",
        "name": "row_limit",
        "options": [
          {
            "selected": true,
            "text": "300",
            "value": "300"
          }
        ],
        "query": "300",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "SqlServer",
          "value": "SqlServer"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "mssql",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      }
    ]
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "browser",
  "title": "Monitoring - Live",
  "uid": "Fg8Q_wSMz",
  "version": 67,
  "weekStart": ""
}